{"version":3,"sources":["webpack://node-poweredup/./node_modules/base64-js/index.js","webpack://node-poweredup/./node_modules/buffer/index.js","webpack://node-poweredup/./node_modules/buffer/node_modules/ieee754/index.js","webpack://node-poweredup/./node_modules/compare-versions/index.js","webpack://node-poweredup/./node_modules/debug/src/browser.js","webpack://node-poweredup/./node_modules/debug/src/common.js","webpack://node-poweredup/./node_modules/events/events.js","webpack://node-poweredup/./node_modules/ms/index.js","webpack://node-poweredup/./src/consts.ts","webpack://node-poweredup/./src/devices/absolutemotor.ts","webpack://node-poweredup/./src/devices/basicmotor.ts","webpack://node-poweredup/./src/devices/colordistancesensor.ts","webpack://node-poweredup/./src/devices/currentsensor.ts","webpack://node-poweredup/./src/devices/device.ts","webpack://node-poweredup/./src/devices/duplotrainbasecolorsensor.ts","webpack://node-poweredup/./src/devices/duplotrainbasemotor.ts","webpack://node-poweredup/./src/devices/duplotrainbasespeaker.ts","webpack://node-poweredup/./src/devices/duplotrainbasespeedometer.ts","webpack://node-poweredup/./src/devices/hubled.ts","webpack://node-poweredup/./src/devices/light.ts","webpack://node-poweredup/./src/devices/marioaccelerometer.ts","webpack://node-poweredup/./src/devices/mariobarcodesensor.ts","webpack://node-poweredup/./src/devices/mariopantssensor.ts","webpack://node-poweredup/./src/devices/mediumlinearmotor.ts","webpack://node-poweredup/./src/devices/motionsensor.ts","webpack://node-poweredup/./src/devices/movehubmediumlinearmotor.ts","webpack://node-poweredup/./src/devices/movehubtiltsensor.ts","webpack://node-poweredup/./src/devices/piezobuzzer.ts","webpack://node-poweredup/./src/devices/remotecontrolbutton.ts","webpack://node-poweredup/./src/devices/simplemediumlinearmotor.ts","webpack://node-poweredup/./src/devices/tachomotor.ts","webpack://node-poweredup/./src/devices/techniccolorsensor.ts","webpack://node-poweredup/./src/devices/technicdistancesensor.ts","webpack://node-poweredup/./src/devices/technicforcesensor.ts","webpack://node-poweredup/./src/devices/techniclargeangularmotor.ts","webpack://node-poweredup/./src/devices/techniclargelinearmotor.ts","webpack://node-poweredup/./src/devices/technicmediumangularmotor.ts","webpack://node-poweredup/./src/devices/technicmediumhubaccelerometersensor.ts","webpack://node-poweredup/./src/devices/technicmediumhubgyrosensor.ts","webpack://node-poweredup/./src/devices/technicmediumhubtiltsensor.ts","webpack://node-poweredup/./src/devices/technicxlargelinearmotor.ts","webpack://node-poweredup/./src/devices/tiltsensor.ts","webpack://node-poweredup/./src/devices/trainmotor.ts","webpack://node-poweredup/./src/devices/voltagesensor.ts","webpack://node-poweredup/./src/hubs/basehub.ts","webpack://node-poweredup/./src/hubs/duplotrainbase.ts","webpack://node-poweredup/./src/hubs/hub.ts","webpack://node-poweredup/./src/hubs/lpf2hub.ts","webpack://node-poweredup/./src/hubs/mario.ts","webpack://node-poweredup/./src/hubs/movehub.ts","webpack://node-poweredup/./src/hubs/remotecontrol.ts","webpack://node-poweredup/./src/hubs/technicmediumhub.ts","webpack://node-poweredup/./src/hubs/wedo2smarthub.ts","webpack://node-poweredup/./src/index-browser.ts","webpack://node-poweredup/./src/poweredup-browser.ts","webpack://node-poweredup/./src/utils.ts","webpack://node-poweredup/./src/webbleabstraction.ts","webpack://node-poweredup/webpack/bootstrap","webpack://node-poweredup/webpack/runtime/global","webpack://node-poweredup/webpack/startup"],"names":["exports","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","constructor","alphabet","table","i16","fn","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","semver","v","q","patchIndex","substring","tryParse","validate","version","test","compareVersions","v1","v2","forEach","s1","s2","n1","n2","sp1","sp2","p1","map","p2","allowedOperators","operatorResMap","operator","op","validateOperator","formatArgs","args","useColors","namespace","module","humanize","diff","color","splice","index","lastC","match","save","namespaces","storage","setItem","removeItem","load","r","getItem","process","env","DEBUG","window","__nwjs","navigator","userAgent","document","documentElement","style","WebkitAppearance","firebug","exception","RegExp","$1","localStorage","localstorage","destroy","warned","warn","colors","debug","formatters","JSON","stringify","createDebug","prevTime","enableOverride","enabled","self","curr","Date","ms","prev","coerce","unshift","format","formatter","selectColor","extend","init","delimiter","newDebug","toNamespace","regexp","default","disable","names","skips","enable","keys","key","hash","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","EventEmitter","once","emitter","Promise","resolve","reject","eventListener","errorListener","removeListener","err","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","events","existing","warning","create","newListener","emit","w","count","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","context","handler","listeners","addListener","on","prependListener","prependOnceListener","position","originalListener","shift","pop","spliceOne","off","removeAllListeners","rawListeners","eventNames","h","plural","msAbs","isPlural","round","options","exec","parseFloat","parse","long","fmtShort","HubType","DeviceType","Color","MarioColor","MarioPantsType","PortInputFormatSetupSubCommand","ModeInformationType","HWNetworkSubFamily","HWNetworkFamily","HWNetWorkCommandType","ErrorCode","IOTypeID","AlertPayload","AlertOperation","AlertType","ActionType","HubPropertyPayload","HubPropertyOperation","HubPropertyReference","MessageType","BLECharacteristic","BLEService","BLEManufacturerData","DuploTrainBaseSound","BrakingStyle","ButtonState","HubTypeNames","DeviceTypeNames","ColorNames","AbsoluteMotor","TachoMotor","hub","portId","modeMap","Consts","UNKNOWN","assign","ModeMap","_mode","Mode","ABSOLUTE","angle","normalizeAngle","isWeDo2SmartHub","notify","receive","speed","isVirtualPort","cancelEventTimer","_busy","mapSpeed","_maxPower","_brakeStyle","useProfile","send","_finished","oldMode","mode","calibrated","async","rotateByDegrees","subscribe","requestUpdate","ROTATION","BasicMotor","Device","power","interrupt","writeDirect","fromPower","toPower","time","calculateRamp","setPower","BRAKE","ColorDistanceSensor","COLOR_DISTANCE_SENSOR","COLOR","DISTANCE","distance","COLOR_AND_DISTANCE","partial","channel","address","sendPFIRMessage","_pfPowerToPWM","powerBlue","powerRed","payload","PF_IR","LED","Output","CurrentSensor","CURRENT_SENSOR","CURRENT","current","maxCurrentValue","MaxCurrentValue","maxCurrentRaw","MaxCurrentRaw","TECHNIC_MEDIUM_HUB","autoSubscribe","values","_connected","_modeMap","_isVirtualPort","_eventTimer","_hub","_portId","_type","_isWeDo2SmartHub","WEDO2_SMART_HUB","isPortVirtual","eventAttachListener","event","deviceDetachListener","device","getPortNameForPortId","WEDO2_MOTOR_VALUE_WRITE","LPF2_ALL","characteristic","_ensureConnected","timer","clearTimeout","connected","DuploTrainBaseColorSensor","DUPLO_TRAIN_BASE_COLOR_SENSOR","REFLECTIVITY","reflect","RGB","red","green","blue","DuploTrainBaseMotor","DUPLO_TRAIN_BASE_MOTOR","DuploTrainBaseSpeaker","DUPLO_TRAIN_BASE_SPEAKER","sound","SOUND","tone","TONE","DuploTrainBaseSpeedometer","DUPLO_TRAIN_BASE_SPEEDOMETER","SPEED","HubLED","HUB_LED","WEDO2_PORT_TYPE_WRITE","Light","LIGHT","brightness","fromBrightness","toBrightness","setBrightness","MarioAccelerometer","MARIO_ACCELEROMETER","ACCEL","z","GEST","gesture","MarioBarcodeSensor","MARIO_BARCODE_SENSOR","BARCODE","barcode","g","MarioPantsSensor","MARIO_PANTS_SENSOR","PANTS","pants","MediumLinearMotor","MEDIUM_LINEAR_MOTOR","MotionSensor","MOTION_SENSOR","MoveHubMediumLinearMotor","MOVE_HUB_MEDIUM_LINEAR_MOTOR","MoveHubTiltSensor","MOVE_HUB_TILT_SENSOR","TILT","PiezoBuzzer","PIEZO_BUZZER","frequency","setTimeout","RemoteControlButton","REMOTE_CONTROL_BUTTON","BUTTON_EVENTS","SimpleMediumLinearMotor","SIMPLE_MEDIUM_LINEAR_MOTOR","useAccelerationProfile","useDecelerationProfile","degrees","maxPower","profile","TechnicColorSensor","TECHNIC_COLOR_SENSOR","AMBIENT_LIGHT","ambient","firstSegment","secondSegment","thirdSegment","TechnicDistanceSensor","TECHNIC_DISTANCE_SENSOR","FAST_DISTANCE","fastDistance","topLeft","bottomLeft","topRight","bottomRight","TechnicForceSensor","TECHNIC_FORCE_SENSOR","FORCE","force","TOUCHED","touched","TAPPED","tapped","TechnicLargeAngularMotor","TECHNIC_LARGE_ANGULAR_MOTOR","TechnicLargeLinearMotor","TECHNIC_LARGE_LINEAR_MOTOR","TechnicMediumAngularMotor","TECHNIC_MEDIUM_ANGULAR_MOTOR","TechnicMediumHubAccelerometerSensor","TECHNIC_MEDIUM_HUB_ACCELEROMETER","TechnicMediumHubGyroSensor","TECHNIC_MEDIUM_HUB_GYRO_SENSOR","GYRO","TechnicMediumHubTiltSensor","TECHNIC_MEDIUM_HUB_TILT_SENSOR","TechnicXLargeLinearMotor","TECHNIC_XLARGE_LINEAR_MOTOR","TiltSensor","TILT_SENSOR","TrainMotor","TRAIN_MOTOR","VoltageSensor","VOLTAGE_SENSOR","VOLTAGE","voltage","maxVoltageValue","MaxVoltageValue","maxVoltageRaw","MaxVoltageRaw","DUPLO_TRAIN_BASE","REMOTE_CONTROL","Debug","BaseHub","bleDevice","portMap","_attachedDevices","_name","_firmwareVersion","_hardwareVersion","_primaryMACAddress","_batteryLevel","_rssi","_portMap","_virtualPorts","_attachCallbacks","_bleDevice","uuid","connecting","connect","disconnect","portName","existingDevice","getDeviceAtPort","deviceType","getDevices","filter","existingDevices","getDevicesByType","port","delay","commands","all","_createDevice","_attachDevice","callback","DuploTrainBase","LPF2Hub","peripheral","advertisement","serviceUuids","LPF2_HUB","manufacturerData","DUPLO_TRAIN_BASE_ID","PortMap","Hub","HUB","_currentPort","HUB_ID","modeInfoDebug","_messageBuffer","_propertyRequestCallbacks","discoverCharacteristicsForService","subscribeToCharacteristic","_parseMessage","_requestHubPropertyReports","BUTTON_STATE","_requestHubPropertyValue","FW_VERSION","HW_VERSION","RSSI","BATTERY_VOLTAGE","PRIMARY_MAC_ADDRESS","writeToCharacteristic","firstPortName","secondPortName","firstDevice","secondDevice","HUB_PROPERTIES","property","_parseHubPropertyResponse","HUB_ATTACHED_IO","_parsePortMessage","PORT_INFORMATION","_parsePortInformationResponse","PORT_MODE_INFORMATION","_parseModeInformationResponse","PORT_VALUE_SINGLE","_parseSensorMessage","PORT_OUTPUT_COMMAND_FEEDBACK","_parsePortAction","PRESSED","RELEASED","decodeVersion","_checkFirmware","rssi","decodeMACAddress","batteryLevel","ATTACHED_IO","deviceTypeName","toHex","hwVersion","swVersion","_sendPortInformationRequest","DETACHED_IO","_getDeviceByPortId","_detachDevice","virtualPortId","ATTACHED_VIRTUAL_IO","virtualPortName","modeCombinationMasks","toBin","_sendModeInformationRequest","NAME","RAW","PCT","SI","SYMBOL","VALUE_FORMAT","numValues","dataType","totalFigures","decimals","finish","Mario","MARIO_ID","MOVE_HUB","MoveHub","MOVE_HUB_ID","RemoteControl","REMOTE_CONTROL_ID","TechnicMediumHub","WeDo2SmartHub","_lastTiltX","_lastTiltY","WEDO2_SMART_HUB_2","isWebBluetooth","WEDO2_SMART_HUB_3","WEDO2_SMART_HUB_4","WEDO2_SMART_HUB_5","WEDO2_PORT_TYPE","WEDO2_SENSOR_VALUE","WEDO2_BUTTON","readFromCharacteristic","_parseBatteryMessage","_parseHighCurrentAlert","WEDO2_BATTERY","WEDO2_HIGH_CURRENT_ALERT","_parseFirmwareRevisionString","WEDO2_FIRMWARE_REVISION","WEDO2_DISCONNECT","WEDO2_NAME_ID","_getCharacteristicNameFromUUID","PoweredUP","_connectedHubs","_discoveryEventHandler","bluetooth","requestDevice","filters","services","optionalServices","server","gatt","primaryMACAddress","hubType","addToCharacteristicMailbox","WebBLEDevice","isLPF2Hub","_determineLPF2HubType","MARIO","padStart","part","roundAngleToNearest90","steps","increment","interval","setInterval","clearInterval","setEventTimer","_characteristics","_queue","_mailbox","_connecting","_webBLEServer","_uuid","id","addEventListener","service","getPrimaryService","characteristics","getCharacteristics","removeEventListener","view","mailbox","startNotifications","readValue","then","writeValueWithoutResponse","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","globalThis"],"mappings":"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","file":"poweredup.js","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/* global define */\n(function (root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.compareVersions = factory();\n  }\n}(this, function () {\n\n  var semver = /^v?(?:\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+))?(?:-[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n\n  function indexOrEnd(str, q) {\n    return str.indexOf(q) === -1 ? str.length : str.indexOf(q);\n  }\n\n  function split(v) {\n    var c = v.replace(/^v/, '').replace(/\\+.*$/, '');\n    var patchIndex = indexOrEnd(c, '-');\n    var arr = c.substring(0, patchIndex).split('.');\n    arr.push(c.substring(patchIndex + 1));\n    return arr;\n  }\n\n  function tryParse(v) {\n    return isNaN(Number(v)) ? v : Number(v);\n  }\n\n  function validate(version) {\n    if (typeof version !== 'string') {\n      throw new TypeError('Invalid argument expected string');\n    }\n    if (!semver.test(version)) {\n      throw new Error('Invalid argument not valid semver (\\''+version+'\\' received)');\n    }\n  }\n\n  function compareVersions(v1, v2) {\n    [v1, v2].forEach(validate);\n\n    var s1 = split(v1);\n    var s2 = split(v2);\n\n    for (var i = 0; i < Math.max(s1.length - 1, s2.length - 1); i++) {\n      var n1 = parseInt(s1[i] || 0, 10);\n      var n2 = parseInt(s2[i] || 0, 10);\n\n      if (n1 > n2) return 1;\n      if (n2 > n1) return -1;\n    }\n\n    var sp1 = s1[s1.length - 1];\n    var sp2 = s2[s2.length - 1];\n\n    if (sp1 && sp2) {\n      var p1 = sp1.split('.').map(tryParse);\n      var p2 = sp2.split('.').map(tryParse);\n\n      for (i = 0; i < Math.max(p1.length, p2.length); i++) {\n        if (p1[i] === undefined || typeof p2[i] === 'string' && typeof p1[i] === 'number') return -1;\n        if (p2[i] === undefined || typeof p1[i] === 'string' && typeof p2[i] === 'number') return 1;\n\n        if (p1[i] > p2[i]) return 1;\n        if (p2[i] > p1[i]) return -1;\n      }\n    } else if (sp1 || sp2) {\n      return sp1 ? -1 : 1;\n    }\n\n    return 0;\n  };\n\n  var allowedOperators = [\n    '>',\n    '>=',\n    '=',\n    '<',\n    '<='\n  ];\n\n  var operatorResMap = {\n    '>': [1],\n    '>=': [0, 1],\n    '=': [0],\n    '<=': [-1, 0],\n    '<': [-1]\n  };\n\n  function validateOperator(op) {\n    if (typeof op !== 'string') {\n      throw new TypeError('Invalid operator type, expected string but got ' + typeof op);\n    }\n    if (allowedOperators.indexOf(op) === -1) {\n      throw new TypeError('Invalid operator, expected one of ' + allowedOperators.join('|'));\n    }\n  }\n\n  compareVersions.validate = function(version) {\n    return typeof version === 'string' && semver.test(version);\n  }\n\n  compareVersions.compare = function (v1, v2, operator) {\n    // Validate operator\n    validateOperator(operator);\n\n    // since result of compareVersions can only be -1 or 0 or 1\n    // a simple map can be used to replace switch\n    var res = compareVersions(v1, v2);\n    return operatorResMap[operator].indexOf(res) > -1;\n  }\n\n  return compareVersions;\n}));\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/**\n * @typedef HubType\n * @property {number} UNKNOWN 0\n * @property {number} WEDO2_SMART_HUB 1\n * @property {number} MOVE_HUB 2\n * @property {number} POWERED_UP_HUB 3\n * @property {number} POWERED_UP_REMOTE 4\n * @property {number} DUPLO_TRAIN_HUB 5\n * @property {number} CONTROL_PLUS_HUB 6\n * @property {number} MARIO 7\n */\nexport enum HubType {\n    UNKNOWN = 0,\n    WEDO2_SMART_HUB = 1,\n    MOVE_HUB = 2,\n    HUB = 3,\n    REMOTE_CONTROL = 4,\n    DUPLO_TRAIN_BASE = 5,\n    TECHNIC_MEDIUM_HUB = 6,\n    MARIO = 7,\n}\n\n\n// tslint:disable-next-line\nexport const HubTypeNames = HubType;\n\n\n/**\n * @typedef DeviceType\n * @property {number} UNKNOWN 0\n * @property {number} SIMPLE_MEDIUM_LINEAR_MOTOR 1\n * @property {number} TRAIN_MOTOR 2\n * @property {number} LED_LIGHTS 8\n * @property {number} VOLTAGE 20\n * @property {number} CURRENT 21\n * @property {number} PIEZO_TONE 22\n * @property {number} RGB_LIGHT 23\n * @property {number} WEDO2_TILT 34\n * @property {number} WEDO2_DISTANCE 35\n * @property {number} COLOR_DISTANCE_SENSOR 37\n * @property {number} MEDIUM_LINEAR_MOTOR 38\n * @property {number} MOVE_HUB_MEDIUM_LINEAR_MOTOR 39\n * @property {number} BOOST_TILT 40\n * @property {number} DUPLO_TRAIN_BASE_MOTOR 41\n * @property {number} DUPLO_TRAIN_BASE_SPEAKER 42\n * @property {number} DUPLO_TRAIN_BASE_COLOR 43\n * @property {number} DUPLO_TRAIN_BASE_SPEEDOMETER 44\n * @property {number} CONTROL_PLUS_LARGE_MOTOR 46\n * @property {number} CONTROL_PLUS_XLARGE_MOTOR 47\n * @property {number} POWERED_UP_REMOTE_BUTTON 55\n * @property {number} RSSI 56\n * @property {number} CONTROL_PLUS_ACCELEROMETER 58\n * @property {number} CONTROL_PLUS_TILT 59\n */\nexport enum DeviceType {\n    UNKNOWN = 0,\n    SIMPLE_MEDIUM_LINEAR_MOTOR = 1,\n    TRAIN_MOTOR = 2,\n    LIGHT = 8,\n    VOLTAGE_SENSOR = 20,\n    CURRENT_SENSOR = 21,\n    PIEZO_BUZZER = 22,\n    HUB_LED = 23,\n    TILT_SENSOR = 34,\n    MOTION_SENSOR = 35,\n    COLOR_DISTANCE_SENSOR = 37,\n    MEDIUM_LINEAR_MOTOR = 38,\n    MOVE_HUB_MEDIUM_LINEAR_MOTOR = 39,\n    MOVE_HUB_TILT_SENSOR = 40,\n    DUPLO_TRAIN_BASE_MOTOR = 41,\n    DUPLO_TRAIN_BASE_SPEAKER = 42,\n    DUPLO_TRAIN_BASE_COLOR_SENSOR = 43,\n    DUPLO_TRAIN_BASE_SPEEDOMETER = 44,\n    TECHNIC_LARGE_LINEAR_MOTOR = 46, // Technic Control+\n    TECHNIC_XLARGE_LINEAR_MOTOR = 47, // Technic Control+\n    TECHNIC_MEDIUM_ANGULAR_MOTOR = 48, // Spike Prime\n    TECHNIC_LARGE_ANGULAR_MOTOR = 49, // Spike Prime\n    TECHNIC_MEDIUM_HUB_GEST_SENSOR = 54,\n    REMOTE_CONTROL_BUTTON = 55,\n    REMOTE_CONTROL_RSSI = 56,\n    TECHNIC_MEDIUM_HUB_ACCELEROMETER = 57,\n    TECHNIC_MEDIUM_HUB_GYRO_SENSOR = 58,\n    TECHNIC_MEDIUM_HUB_TILT_SENSOR = 59,\n    TECHNIC_MEDIUM_HUB_TEMPERATURE_SENSOR = 60,\n    TECHNIC_COLOR_SENSOR = 61, // Spike Prime\n    TECHNIC_DISTANCE_SENSOR = 62, // Spike Prime\n    TECHNIC_FORCE_SENSOR = 63, // Spike Prime\n    MARIO_ACCELEROMETER = 71,\n    MARIO_BARCODE_SENSOR = 73,\n    MARIO_PANTS_SENSOR = 74,\n    TECHNIC_MEDIUM_ANGULAR_MOTOR_GREY = 75, // Technic Control+\n    TECHNIC_LARGE_ANGULAR_MOTOR_GREY = 76, // Technic Control+\n}\n\n\n// tslint:disable-next-line\nexport const DeviceTypeNames = DeviceType;\n\n\n/**\n * @typedef Color\n * @property {number} BLACK 0\n * @property {number} PINK 1\n * @property {number} PURPLE 2\n * @property {number} BLUE 3\n * @property {number} LIGHT_BLUE 4\n * @property {number} CYAN 5\n * @property {number} GREEN 6\n * @property {number} YELLOW 7\n * @property {number} ORANGE 8\n * @property {number} RED 9\n * @property {number} WHITE 10\n * @property {number} NONE 255\n */\nexport enum Color {\n    BLACK = 0,\n    PINK = 1,\n    PURPLE = 2,\n    BLUE = 3,\n    LIGHT_BLUE = 4,\n    CYAN = 5,\n    GREEN = 6,\n    YELLOW = 7,\n    ORANGE = 8,\n    RED = 9,\n    WHITE = 10,\n    NONE = 255\n}\n\n\n// tslint:disable-next-line\nexport const ColorNames = Color;\n\n\n/**\n * @typedef ButtonState\n * @property {number} PRESSED 0\n * @property {number} RELEASED 1\n * @property {number} UP 2\n * @property {number} DOWN 3\n * @property {number} STOP 4\n */\nexport enum ButtonState {\n    PRESSED = 2,\n    RELEASED = 0,\n    UP = 1,\n    DOWN = 255,\n    STOP = 127\n}\n\n\n/**\n * @typedef BrakingStyle\n * @property {number} HOLD 127\n * @property {number} BRAKE 128\n */\nexport enum BrakingStyle {\n    FLOAT = 0,\n    HOLD = 126,\n    BRAKE = 127\n}\n\n\n/**\n * @typedef DuploTrainBaseSound\n * @property {number} BRAKE 3\n * @property {number} STATION_DEPARTURE 5\n * @property {number} WATER_REFILL 7\n * @property {number} HORN 9\n * @property {number} STEAM 10\n */\nexport enum DuploTrainBaseSound {\n    BRAKE = 3,\n    STATION_DEPARTURE = 5,\n    WATER_REFILL = 7,\n    HORN = 9,\n    STEAM = 10\n}\n\n\nexport enum BLEManufacturerData {\n    DUPLO_TRAIN_BASE_ID = 32,\n    MOVE_HUB_ID = 64,\n    HUB_ID = 65,\n    REMOTE_CONTROL_ID = 66,\n    MARIO_ID = 67,\n    TECHNIC_MEDIUM_HUB = 128\n}\n\n\nexport enum BLEService {\n    WEDO2_SMART_HUB = \"00001523-1212-efde-1523-785feabcd123\",\n    WEDO2_SMART_HUB_2 = \"00004f0e-1212-efde-1523-785feabcd123\",\n    WEDO2_SMART_HUB_3 = \"2a19\",\n    WEDO2_SMART_HUB_4 = \"180f\",\n    WEDO2_SMART_HUB_5 = \"180a\",\n    LPF2_HUB = \"00001623-1212-efde-1623-785feabcd123\"\n}\n\n\nexport enum BLECharacteristic {\n    WEDO2_BATTERY = \"2a19\",\n    WEDO2_FIRMWARE_REVISION = \"2a26\",\n    WEDO2_BUTTON = \"00001526-1212-efde-1523-785feabcd123\", // \"1526\"\n    WEDO2_PORT_TYPE = \"00001527-1212-efde-1523-785feabcd123\", // \"1527\" // Handles plugging and unplugging of devices on WeDo 2.0 Smart Hub\n    WEDO2_LOW_VOLTAGE_ALERT = \"00001528-1212-efde-1523-785feabcd123\", // \"1528\"\n    WEDO2_HIGH_CURRENT_ALERT = \"00001529-1212-efde-1523-785feabcd123\", // \"1529\"\n    WEDO2_LOW_SIGNAL_ALERT = \"0000152a-1212-efde-1523-785feabcd123\", // \"152a\",\n    WEDO2_DISCONNECT = \"0000152b-1212-efde-1523-785feabcd123\", // \"152b\"\n    WEDO2_SENSOR_VALUE = \"00001560-1212-efde-1523-785feabcd123\", // \"1560\"\n    WEDO2_VALUE_FORMAT = \"00001561-1212-efde-1523-785feabcd123\", // \"1561\"\n    WEDO2_PORT_TYPE_WRITE = \"00001563-1212-efde-1523-785feabcd123\", // \"1563\"\n    WEDO2_MOTOR_VALUE_WRITE = \"00001565-1212-efde-1523-785feabcd123\", // \"1565\"\n    WEDO2_NAME_ID = \"00001524-1212-efde-1523-785feabcd123\", // \"1524\"\n    LPF2_ALL = \"00001624-1212-efde-1623-785feabcd123\"\n}\n\n\n/**\n * @typedef MessageType\n * @property {number} HUB_PROPERTIES 0x01\n * @property {number} HUB_ACTIONS 0x02\n * @property {number} HUB_ALERTS 0x03\n * @property {number} HUB_ATTACHED_IO 0x04\n * @property {number} GENERIC_ERROR_MESSAGES 0x05\n * @property {number} HW_NETWORK_COMMANDS 0x08\n * @property {number} FW_UPDATE_GO_INTO_BOOT_MODE 0x10\n * @property {number} FW_UPDATE_LOCK_MEMORY 0x11\n * @property {number} FW_UPDATE_LOCK_STATUS_REQUEST 0x12\n * @property {number} FW_LOCK_STATUS 0x13\n * @property {number} PORT_INFORMATION_REQUEST 0x21\n * @property {number} PORT_MODE_INFORMATION_REQUEST 0x22\n * @property {number} PORT_INPUT_FORMAT_SETUP_SINGLE 0x41\n * @property {number} PORT_INPUT_FORMAT_SETUP_COMBINEDMODE 0x42\n * @property {number} PORT_INFORMATION 0x43\n * @property {number} PORT_MODE_INFORMATION 0x44\n * @property {number} PORT_VALUE_SINGLE 0x45\n * @property {number} PORT_VALUE_COMBINEDMODE 0x46\n * @property {number} PORT_INPUT_FORMAT_SINGLE 0x47\n * @property {number} PORT_INPUT_FORMAT_COMBINEDMODE 0x48\n * @property {number} VIRTUAL_PORT_SETUP 0x61\n * @property {number} PORT_OUTPUT_COMMAND 0x81\n * @property {number} PORT_OUTPUT_COMMAND_FEEDBACK 0x82\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#message-types\n */\nexport enum MessageType {\n    HUB_PROPERTIES = 0x01,\n    HUB_ACTIONS = 0x02,\n    HUB_ALERTS = 0x03,\n    HUB_ATTACHED_IO = 0x04,\n    GENERIC_ERROR_MESSAGES = 0x05,\n    HW_NETWORK_COMMANDS = 0x08,\n    FW_UPDATE_GO_INTO_BOOT_MODE = 0x10,\n    FW_UPDATE_LOCK_MEMORY = 0x11,\n    FW_UPDATE_LOCK_STATUS_REQUEST = 0x12,\n    FW_LOCK_STATUS = 0x13,\n    PORT_INFORMATION_REQUEST = 0x21,\n    PORT_MODE_INFORMATION_REQUEST = 0x22,\n    PORT_INPUT_FORMAT_SETUP_SINGLE = 0x41,\n    PORT_INPUT_FORMAT_SETUP_COMBINEDMODE = 0x42,\n    PORT_INFORMATION = 0x43,\n    PORT_MODE_INFORMATION = 0x44,\n    PORT_VALUE_SINGLE = 0x45,\n    PORT_VALUE_COMBINEDMODE = 0x46,\n    PORT_INPUT_FORMAT_SINGLE = 0x47,\n    PORT_INPUT_FORMAT_COMBINEDMODE = 0x48,\n    VIRTUAL_PORT_SETUP = 0x61,\n    PORT_OUTPUT_COMMAND = 0x81,\n    PORT_OUTPUT_COMMAND_FEEDBACK = 0x82,\n}\n\n\n/**\n * @typedef HubPropertyReference\n * @param {number} ADVERTISING_NAME 0x01\n * @param {number} BUTTON 0x02\n * @param {number} FW_VERSION 0x03\n * @param {number} HW_VERSION 0x04\n * @param {number} RSSI 0x05\n * @param {number} BATTERY_VOLTAGE 0x06\n * @param {number} BATTERY_TYPE 0x07\n * @param {number} MANUFACTURER_NAME 0x08\n * @param {number} RADIO_FIRMWARE_VERSION 0x09\n * @param {number} LEGO_WIRELESS_PROTOCOL_VERSION 0x0A\n * @param {number} SYSTEM_TYPE_ID 0x0B\n * @param {number} HW_NETWORK_ID 0x0C\n * @param {number} PRIMARY_MAC_ADDRESS 0x0D\n * @param {number} SECONDARY_MAC_ADDRESS 0x0E\n * @param {number} HARDWARE_NETWORK_FAMILY 0x0F\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#hub-property-reference\n */\nexport enum HubPropertyReference {\n    ADVERTISING_NAME = 0x01,\n    BUTTON = 0x02,\n    FW_VERSION = 0x03,\n    HW_VERSION = 0x04,\n    RSSI = 0x05,\n    BATTERY_VOLTAGE = 0x06,\n    BATTERY_TYPE = 0x07,\n    MANUFACTURER_NAME = 0x08,\n    RADIO_FIRMWARE_VERSION = 0x09,\n    LEGO_WIRELESS_PROTOCOL_VERSION = 0x0A,\n    SYSTEM_TYPE_ID = 0x0B,\n    HW_NETWORK_ID = 0x0C,\n    PRIMARY_MAC_ADDRESS = 0x0D,\n    SECONDARY_MAC_ADDRESS = 0x0E,\n    HARDWARE_NETWORK_FAMILY = 0x0F,\n}\n\n\n/**\n * @typedef HubPropertyOperation\n * @param {number} SET_DOWNSTREAM 0x01\n * @param {number} ENABLE_UPDATES_DOWNSTREAM 0x02\n * @param {number} DISABLE_UPDATES_DOWNSTREAM 0x03\n * @param {number} RESET_DOWNSTREAM 0x04\n * @param {number} REQUEST_UPDATE_DOWNSTREAM 0x05\n * @param {number} UPDATE_UPSTREAM 0x06\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#hub-property-reference\n */\nexport enum HubPropertyOperation {\n    SET_DOWNSTREAM = 0x01,\n    ENABLE_UPDATES_DOWNSTREAM = 0x02,\n    DISABLE_UPDATES_DOWNSTREAM = 0x03,\n    RESET_DOWNSTREAM = 0x04,\n    REQUEST_UPDATE_DOWNSTREAM = 0x05,\n    UPDATE_UPSTREAM = 0x06,\n}\n\n\n/**\n * @typedef HubPropertyPayload\n * @param {number} ADVERTISING_NAME 0x01\n * @param {number} BUTTON_STATE 0x02\n * @param {number} FW_VERSION 0x03\n * @param {number} HW_VERSION 0x04\n * @param {number} RSSI 0x05\n * @param {number} BATTERY_VOLTAGE 0x06\n * @param {number} BATTERY_TYPE 0x07\n * @param {number} MANUFACTURER_NAME 0x08\n * @param {number} RADIO_FIRMWARE_VERSION 0x09\n * @param {number} LWP_PROTOCOL_VERSION 0x0A\n * @param {number} SYSTEM_TYPE_ID 0x0B\n * @param {number} HW_NETWORK_ID 0x0C\n * @param {number} PRIMARY_MAC_ADDRESS 0x0D\n * @param {number} SECONDARY_MAC_ADDRESS 0x0E\n * @param {number} HW_NETWORK_FAMILY 0x0F\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#hub-property-reference\n */\nexport enum HubPropertyPayload {\n    ADVERTISING_NAME = 0x01,\n    BUTTON_STATE = 0x02,\n    FW_VERSION = 0x03,\n    HW_VERSION = 0x04,\n    RSSI = 0x05,\n    BATTERY_VOLTAGE = 0x06,\n    BATTERY_TYPE = 0x07,\n    MANUFACTURER_NAME = 0x08,\n    RADIO_FIRMWARE_VERSION = 0x09,\n    LWP_PROTOCOL_VERSION = 0x0A,\n    SYSTEM_TYPE_ID = 0x0B,\n    HW_NETWORK_ID = 0x0C,\n    PRIMARY_MAC_ADDRESS = 0x0D,\n    SECONDARY_MAC_ADDRESS = 0x0E,\n    HW_NETWORK_FAMILY = 0x0F,\n}\n\n\n/**\n * @typedef ActionType\n * @param {number} SWITCH_OFF_HUB 0x01\n * @param {number} DISCONNECT 0x02\n * @param {number} VCC_PORT_CONTROL_ON 0x03\n * @param {number} VCC_PORT_CONTROL_OFF 0x04\n * @param {number} ACTIVATE_BUSY_INDICATION 0x05\n * @param {number} RESET_BUSY_INDICATION 0x06\n * @param {number} SHUTDOWN 0x2F\n * @param {number} HUB_WILL_SWITCH_OFF 0x30\n * @param {number} HUB_WILL_DISCONNECT 0x31\n * @param {number} HUB_WILL_GO_INTO_BOOT_MODE 0x32\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#action-types\n */\nexport enum ActionType {\n    SWITCH_OFF_HUB = 0x01,\n    DISCONNECT = 0x02,\n    VCC_PORT_CONTROL_ON = 0x03,\n    VCC_PORT_CONTROL_OFF = 0x04,\n    ACTIVATE_BUSY_INDICATION = 0x05,\n    RESET_BUSY_INDICATION = 0x06,\n    SHUTDOWN = 0x2F,\n    HUB_WILL_SWITCH_OFF = 0x30,\n    HUB_WILL_DISCONNECT = 0x31,\n    HUB_WILL_GO_INTO_BOOT_MODE = 0x32,\n}\n\n\n/**\n * @typedef AlertType\n * @param {number} LOW_VOLTAGE 0x01\n * @param {number} HIGH_CURRENT 0x02\n * @param {number} LOW_SIGNAL_STRENGTH 0x03\n * @param {number} OVER_POWER_CONDITION 0x04\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#alert-type\n */\nexport enum AlertType {\n    LOW_VOLTAGE = 0x01,\n    HIGH_CURRENT = 0x02,\n    LOW_SIGNAL_STRENGTH = 0x03,\n    OVER_POWER_CONDITION = 0x04,\n}\n\n\n/**\n * @typedef AlertOperation\n * @param {number} ENABLE_UPDATE 0x01\n * @param {number} DISABLE_UPDATE 0x02\n * @param {number} REQUEST_UPDATE 0x03\n * @param {number} UPDATE 0x04\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#alert-operation\n */\nexport enum AlertOperation {\n    LOW_VOLTAGE = 0x01,\n    HIGH_CURRENT = 0x02,\n    LOW_SIGNAL_STRENGTH = 0x03,\n    OVER_POWER_CONDITION = 0x04,\n}\n\n\n/**\n * @typedef AlertPayload\n * @param {number} STATUS_OK 0x00\n * @param {number} ALERT 0xFF\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#alert-payload\n */\nexport enum AlertPayload {\n    STATUS_OK = 0x00,\n    ALERT = 0xFF,\n}\n\n\n/**\n * @typedef Event\n * @param {number} DETACHED_IO 0x00\n * @param {number} ATTACHED_IO 0x01\n * @param {number} ATTACHED_VIRTUAL_IO 0x02\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#event\n */\nexport enum AlertPayload {\n    DETACHED_IO = 0x00,\n    ATTACHED_IO = 0x01,\n    ATTACHED_VIRTUAL_IO = 0x02,\n}\n\n\n/**\n * @typedef IOTypeID\n * @param {number} MOTOR 0x0001\n * @param {number} SYSTEM_TRAIN_MOTOR 0x0002\n * @param {number} BUTTON 0x0005\n * @param {number} LED_LIGHT 0x0008\n * @param {number} VOLTAGE 0x0014\n * @param {number} CURRENT 0x0015\n * @param {number} PIEZO_TONE_SOUND 0x0016\n * @param {number} RGB_LIGHT 0x0017\n * @param {number} EXTERNAL_TILT_SENSOR 0x0022\n * @param {number} MOTION_SENSOR 0x0023\n * @param {number} VISION_SENSOR 0x0025\n * @param {number} EXTERNAL_MOTOR 0x0026\n * @param {number} INTERNAL_MOTOR 0x0027\n * @param {number} INTERNAL_TILT 0x0028\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#io-type-id\n */\nexport enum IOTypeID {\n    MOTOR = 0x0001,\n    SYSTEM_TRAIN_MOTOR = 0x0002,\n    BUTTON = 0x0005,\n    LED_LIGHT = 0x0008,\n    VOLTAGE = 0x0014,\n    CURRENT = 0x0015,\n    PIEZO_TONE_SOUND = 0x0016,\n    RGB_LIGHT = 0x0017,\n    EXTERNAL_TILT_SENSOR = 0x0022,\n    MOTION_SENSOR = 0x0023,\n    VISION_SENSOR = 0x0025,\n    EXTERNAL_MOTOR = 0x0026,\n    INTERNAL_MOTOR = 0x0027,\n    INTERNAL_TILT = 0x0028,\n}\n\n\n/**\n * @typedef ErrorCode\n * @param {number} ACK 0x01\n * @param {number} MACK 0x02\n * @param {number} BUFFER_OVERFLOW 0x03\n * @param {number} TIMEOUT 0x04\n * @param {number} COMMAND_NOT_RECOGNIZED 0x05\n * @param {number} INVALID_USE 0x06\n * @param {number} OVERCURRENT 0x07\n * @param {number} INTERNAL_ERROR 0x08\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#error-codes\n */\nexport enum ErrorCode {\n    ACK = 0x01,\n    MACK = 0x02,\n    BUFFER_OVERFLOW = 0x03,\n    TIMEOUT = 0x04,\n    COMMAND_NOT_RECOGNIZED = 0x05,\n    INVALID_USE = 0x06,\n    OVERCURRENT = 0x07,\n    INTERNAL_ERROR = 0x08,\n}\n\n\n/**\n * @typedef HWNetWorkCommandType\n * @param {number} CONNECTION_REQUEST 0x02\n * @param {number} FAMILY_REQUEST 0x03\n * @param {number} FAMILY_SET 0x04\n * @param {number} JOIN_DENIED 0x05\n * @param {number} GET_FAMILY 0x06\n * @param {number} FAMILY 0x07\n * @param {number} GET_SUBFAMILY 0x08\n * @param {number} SUBFAMILY 0x09\n * @param {number} SUBFAMILY_SET 0x0A\n * @param {number} GET_EXTENDED_FAMILY 0x0B\n * @param {number} EXTENDED_FAMILY 0x0C\n * @param {number} EXTENDED_FAMILY_SET 0x0D\n * @param {number} RESET_LONG_PRESS_TIMING 0x0E\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#h-w-network-command-type\n */\nexport enum HWNetWorkCommandType {\n    CONNECTION_REQUEST = 0x02,\n    FAMILY_REQUEST = 0x03,\n    FAMILY_SET = 0x04,\n    JOIN_DENIED = 0x05,\n    GET_FAMILY = 0x06,\n    FAMILY = 0x07,\n    GET_SUBFAMILY = 0x08,\n    SUBFAMILY = 0x09,\n    SUBFAMILY_SET = 0x0A,\n    GET_EXTENDED_FAMILY = 0x0B,\n    EXTENDED_FAMILY = 0x0C,\n    EXTENDED_FAMILY_SET = 0x0D,\n    RESET_LONG_PRESS_TIMING = 0x0E,\n}\n\n\n/**\n * @typedef HWNetworkFamily\n * @param {number} GREEN 0x01\n * @param {number} YELLOW 0x02\n * @param {number} RED 0x03\n * @param {number} BLUE 0x04\n * @param {number} PURPLE 0x05\n * @param {number} LIGHT_BLUE 0x06\n * @param {number} TEAL 0x07\n * @param {number} PINK 0x08\n * @param {number} WHITE 0x00\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#h-w-network-family\n */\nexport enum HWNetworkFamily {\n    GREEN = 0x01,\n    YELLOW = 0x02,\n    RED = 0x03,\n    BLUE = 0x04,\n    PURPLE = 0x05,\n    LIGHT_BLUE = 0x06,\n    TEAL = 0x07,\n    PINK = 0x08,\n    WHITE = 0x00,\n}\n\n\n/**\n * @typedef HWNetworkSubFamily\n * @param {number} ONE_FLASH 0x01\n * @param {number} TWO_FLASHES 0x02\n * @param {number} THREE_FLASHES 0x03\n * @param {number} FOUR_FLASHES 0x04\n * @param {number} FIVE_FLASHES 0x05\n * @param {number} SIX_FLASHES 0x06\n * @param {number} SEVEN_FLASHES 0x07\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#h-w-network-sub-family\n */\nexport enum HWNetworkSubFamily {\n    ONE_FLASH = 0x01,\n    TWO_FLASHES = 0x02,\n    THREE_FLASHES = 0x03,\n    FOUR_FLASHES = 0x04,\n    FIVE_FLASHES = 0x05,\n    SIX_FLASHES = 0x06,\n    SEVEN_FLASHES = 0x07,\n}\n\n\n/**\n * @typedef ModeInformationType\n * @param {number} NAME 0x00\n * @param {number} RAW 0x01\n * @param {number} PCT 0x02\n * @param {number} SI 0x03\n * @param {number} SYMBOL 0x04\n * @param {number} MAPPING 0x05\n * @param {number} USED_INTERNALLY 0x06\n * @param {number} MOTOR_BIAS 0x07\n * @param {number} CAPABILITY_BITS 0x08\n * @param {number} VALUE_FORMAT 0x80\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#mode-information-types\n */\nexport enum ModeInformationType {\n    NAME = 0x00,\n    RAW = 0x01,\n    PCT = 0x02,\n    SI = 0x03,\n    SYMBOL = 0x04,\n    MAPPING = 0x05,\n    USED_INTERNALLY = 0x06,\n    MOTOR_BIAS = 0x07,\n    CAPABILITY_BITS = 0x08,\n    VALUE_FORMAT = 0x80,\n}\n\n\n/**\n * @typedef PortInputFormatSetupSubCommand\n * @param {number} SET_MODEANDDATASET_COMBINATIONS 0x01\n * @param {number} LOCK_LPF2_DEVICE_FOR_SETUP 0x02\n * @param {number} UNLOCKANDSTARTWITHMULTIUPDATEENABLED 0x03\n * @param {number} UNLOCKANDSTARTWITHMULTIUPDATEDISABLED 0x04\n * @param {number} NOT_USED 0x05\n * @param {number} RESET_SENSOR 0x06\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#port-input-format-setup-sub-commands\n */\nexport enum PortInputFormatSetupSubCommand {\n    SET_MODEANDDATASET_COMBINATIONS = 0x01,\n    LOCK_LPF2_DEVICE_FOR_SETUP = 0x02,\n    UNLOCKANDSTARTWITHMULTIUPDATEENABLED = 0x03,\n    UNLOCKANDSTARTWITHMULTIUPDATEDISABLED = 0x04,\n    NOT_USED = 0x05,\n    RESET_SENSOR = 0x06,\n}\n\n\n/**\n * @typedef MarioPantsType\n * @param {number} NONE 0x00\n * @param {number} PROPELLER 0x06\n * @param {number} CAT 0x11\n * @param {number} FIRE 0x12\n * @param {number} NORMAL 0x21\n * @param {number} BUILDER 0x22\n */\nexport enum MarioPantsType {\n    NONE = 0x00,\n    PROPELLER = 0x06,\n    CAT = 0x11,\n    FIRE = 0x12,\n    NORMAL = 0x21,\n    BUILDER = 0x22,\n}\n\n\n/**\n * @typedef MarioColor\n * @param {number} WHITE 0x1300\n * @param {number} RED 0x1500\n * @param {number} BLUE 0x1700\n * @param {number} YELLOW 0x1800\n * @param {number} BLACK 0x1a00\n * @param {number} GREEN 0x2500\n * @param {number} BROWN 0x6a00\n * @param {number} CYAN 0x4201\n */\nexport enum MarioColor {\n    WHITE = 0x1300,\n    RED = 0x1500,\n    BLUE = 0x1700,\n    YELLOW = 0x1800,\n    BLACK = 0x1a00,\n    GREEN = 0x2500,\n    BROWN = 0x6a00,\n    CYAN = 0x4201,\n}\n","import { TachoMotor } from \"./tachomotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\nimport { mapSpeed, normalizeAngle, roundAngleToNearest90 } from \"../utils\";\n\n/**\n * @class AbsoluteMotor\n * @extends TachoMotor\n */\nexport class AbsoluteMotor extends TachoMotor {\n\n    constructor (hub: IDeviceInterface, portId: number, modeMap: {[event: string]: number} = {}, type: Consts.DeviceType = Consts.DeviceType.UNKNOWN) {\n        super(hub, portId, Object.assign({}, modeMap, ModeMap), type);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.ABSOLUTE:\n                const angle = normalizeAngle(message.readInt16LE(this.isWeDo2SmartHub ? 2 : 4));\n                /**\n                 * Emits when a the motors absolute position is changed.\n                 * @event AbsoluteMotor#absolute\n                 * @type {object}\n                 * @param {number} absolute\n                 */\n                this.notify(\"absolute\", { angle });\n                break;\n            default:\n                super.receive(message);\n                break;\n        }\n    }\n\n    /**\n     * Rotate a motor by a given angle.\n     * @method AbsoluteMotor#gotoAngle\n     * @param {number} angle Absolute position the motor should go to (degrees from 0).\n     * @param {number} [speed=100] For forward, a value between 1 - 100 should be set. For reverse, a value between -1 to -100.\n     * @returns {Promise} Resolved upon successful completion of command (ie. once the motor is finished).\n     */\n    public gotoAngle (angle: [number, number] | number, speed: number = 100) {\n        if (!this.isVirtualPort && angle instanceof Array) {\n            throw new Error(\"Only virtual ports can accept multiple positions\");\n        }\n        if (this.isWeDo2SmartHub) {\n            throw new Error(\"Absolute positioning is not available on the WeDo 2.0 Smart Hub\");\n        }\n        this.cancelEventTimer();\n        return new Promise<void>((resolve) => {\n            this._busy = true;\n            if (speed === undefined || speed === null) {\n                speed = 100;\n            }\n            let message;\n            if (angle instanceof Array) {\n                message = Buffer.from([0x81, this.portId, 0x11, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, mapSpeed(speed), this._maxPower, this._brakeStyle, this.useProfile()]);\n                message.writeInt32LE(normalizeAngle(angle[0]), 4);\n                message.writeInt32LE(normalizeAngle(angle[1]), 8);\n            } else {\n                message = Buffer.from([0x81, this.portId, 0x11, 0x0d, 0x00, 0x00, 0x00, 0x00, mapSpeed(speed), this._maxPower, this._brakeStyle, this.useProfile()]);\n                message.writeInt32LE(normalizeAngle(angle), 4);\n            }\n            this.send(message);\n            this._finished = () => {\n                return resolve();\n            };\n        });\n    }\n\n\n    /**\n     * Rotate motor to real zero position.\n     *\n     * Real zero is marked on Technic angular motors (SPIKE Prime). It is also available on Technic linear motors (Control+) but is unmarked.\n     * @method AbsoluteMotor#gotoRealZero\n     * @param {number} [speed=100] Speed between 1 - 100. Note that this will always take the shortest path to zero.\n     * @returns {Promise} Resolved upon successful completion of command (ie. once the motor is finished).\n     */\n    public gotoRealZero (speed: number = 100) {\n        return new Promise<void>((resolve) => {\n            const oldMode = this.mode;\n            let calibrated = false;\n            this.on(\"absolute\", async ({ angle }) => {\n                if (!calibrated) {\n                    calibrated = true;\n                    if (angle < 0) {\n                        angle = Math.abs(angle);\n                    } else {\n                        speed = -speed;\n                    }\n                    await this.rotateByDegrees(angle, speed);\n                    if (oldMode) {\n                        this.subscribe(oldMode);\n                    }\n                    return resolve();\n                }\n            });\n            this.requestUpdate();\n        });\n    }\n\n\n    /**\n     * Reset zero to current position\n     * @method AbsoluteMotor#resetZero\n     * @returns {Promise} Resolved upon successful completion of command (ie. once the motor is finished).\n     */\n    public resetZero () {\n        return new Promise<void>((resolve) => {\n            const data = Buffer.from([0x81, this.portId, 0x11, 0x51, 0x02, 0x00, 0x00, 0x00, 0x00]);\n            this.send(data);\n            return resolve();\n        });\n    }\n\n\n}\n\nexport enum Mode {\n    ROTATION = 0x02,\n    ABSOLUTE = 0x03\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"rotate\": Mode.ROTATION,\n    \"absolute\": Mode.ABSOLUTE\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\nimport { calculateRamp, mapSpeed } from \"../utils\";\n\n/**\n * @class BasicMotor\n * @extends Device\n */\nexport class BasicMotor extends Device {\n\n\n    constructor (hub: IDeviceInterface, portId: number, modeMap: {[event: string]: number}, type: Consts.DeviceType = Consts.DeviceType.UNKNOWN) {\n        super(hub, portId, modeMap, type);\n    }\n\n\n    /**\n     * Set the motor power.\n     * @method BasicMotor#setPower\n     * @param {number} power For forward, a value between 1 - 100 should be set. For reverse, a value between -1 to -100. Stop is 0.\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setPower (power: number, interrupt: boolean = true) {\n        if (interrupt) {\n            this.cancelEventTimer();\n        }\n        return this.writeDirect(0x00, Buffer.from([mapSpeed(power)]));\n    }\n\n\n    /**\n     * Ramp the motor power.\n     * @method BasicMotor#rampPower\n     * @param {number} fromPower For forward, a value between 1 - 100 should be set. For reverse, a value between -1 to -100. Stop is 0.\n     * @param {number} toPower For forward, a value between 1 - 100 should be set. For reverse, a value between -1 to -100. Stop is 0.\n     * @param {number} time How long the ramp should last (in milliseconds).\n     * @returns {Promise} Resolved upon successful completion of command.\n     */\n    public rampPower (fromPower: number, toPower: number, time: number) {\n        this.cancelEventTimer();\n        return new Promise((resolve) => {\n            calculateRamp(this, fromPower, toPower, time)\n            .on(\"changePower\", (power) => {\n                this.setPower(power, false);\n            })\n            .on(\"finished\", resolve);\n        });\n    }\n\n\n    /**\n     * Stop the motor.\n     * @method BasicMotor#stop\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public stop () {\n        this.cancelEventTimer();\n        return this.setPower(0);\n    }\n\n\n    /**\n     * Brake the motor.\n     * @method BasicMotor#brake\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public brake () {\n        this.cancelEventTimer();\n        return this.setPower(Consts.BrakingStyle.BRAKE);\n    }\n\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class ColorDistanceSensor\n * @extends Device\n */\nexport class ColorDistanceSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.COLOR_DISTANCE_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.COLOR:\n                if (message[this.isWeDo2SmartHub ? 2 : 4] <= 10) {\n                    const color = message[this.isWeDo2SmartHub ? 2 : 4];\n\n                    /**\n                     * Emits when a color sensor is activated.\n                     * @event ColorDistanceSensor#color\n                     * @type {object}\n                     * @param {Color} color\n                     */\n                    this.notify(\"color\", { color });\n                }\n                break;\n\n            case Mode.DISTANCE:\n                if (this.isWeDo2SmartHub) {\n                    break;\n                }\n                if (message[4] <= 10) {\n                    let distance = Math.floor(message[4] * 25.4);\n\n                    if (distance < 0) {\n                        distance = 0;\n                    }\n\n                    /**\n                     * Emits when a distance sensor is activated.\n                     * @event ColorDistanceSensor#distance\n                     * @type {object}\n                     * @param {number} distance Distance, in millimeters.\n                     */\n                    this.notify(\"distance\", { distance });\n                }\n                break;\n\n            case Mode.COLOR_AND_DISTANCE:\n                if (this.isWeDo2SmartHub) {\n                    break;\n                }\n\n                let distance = message[5];\n                const partial = message[7];\n\n                if (partial > 0) {\n                    distance += 1.0 / partial;\n                }\n\n                distance = Math.floor(distance * 25.4) - 20;\n\n                /**\n                 * A combined color and distance event, emits when the sensor is activated.\n                 * @event ColorDistanceSensor#colorAndDistance\n                 * @type {object}\n                 * @param {Color} color\n                 * @param {number} distance Distance, in millimeters.\n                 */\n                if (message[4] <= 10) {\n                    const color = message[4];\n                    this.notify(\"colorAndDistance\", { color, distance });\n                }\n                break;\n\n        }\n    }\n\n\n    /**\n     * Switches the IR receiver into extended channel mode. After setting this, use channels 5-8 instead of 1-4 for this receiver.\n     *\n     * NOTE: Calling this with channel 5-8 with switch off extended channel mode for this receiver.\n     * @method ColorDistanceSensor#setPFExtendedChannel\n     * @param {number} channel Channel number, between 1-8\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setPFExtendedChannel (channel: number) {\n        let address = 0;\n        if (channel >= 4) {\n            channel -= 4;\n            address = 1;\n        }\n        const message = Buffer.alloc(2);\n        // Send \"Extended toggle address command\"\n        message[0] = ((channel - 1) << 4) + (address << 3);\n        message[1] = 6 << 4;\n        return this.sendPFIRMessage(message);\n    }\n\n\n    /**\n     * Set the power of a Power Functions motor via IR\n     * @method ColorDistanceSensor#setPFPower\n     * @param {number} channel Channel number, between 1-4\n     * @param {string} output Outport port, \"RED\" (A) or \"BLUE\" (B)\n     * @param {number} power -7 (full reverse) to 7 (full forward). 0 is stop. 8 is brake.\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setPFPower (channel: number, output: Output, power: number) {\n        let address = 0;\n        if (channel > 4) {\n            channel -= 4;\n            address = 1;\n        }\n        const message = Buffer.alloc(2);\n        // Send \"Single output mode\"\n        message[0] = ((channel - 1) << 4) + (address << 3) + (output === \"RED\" ? 4 : 5);\n        message[1] = this._pfPowerToPWM(power) << 4;\n        return this.sendPFIRMessage(message);\n    }\n\n\n    /**\n     * Start Power Functions motors running via IR\n     *\n     * NOTE: This command is designed for bang-bang style operation. To keep the motors running, the sensor needs to be within range of the IR receiver constantly.\n     * @method ColorDistanceSensor#startPFMotors\n     * @param {Buffer} channel Channel number, between 1-4\n     * @param {Buffer} powerA -7 (full reverse) to 7 (full forward). 0 is stop. 8 is brake.\n     * @param {Buffer} powerB -7 (full reverse) to 7 (full forward). 0 is stop. 8 is brake.\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public startPFMotors (channel: number, powerBlue: number, powerRed: number) {\n        let address = 0;\n        if (channel > 4) {\n            channel -= 4;\n            address = 1;\n        }\n        const message = Buffer.alloc(2);\n        // Send \"Combo PWM mode\"\n        message[0] = (((channel - 1) + 4 + (address << 3)) << 4) + this._pfPowerToPWM(powerBlue);\n        message[1] = this._pfPowerToPWM(powerRed) << 4;\n        return this.sendPFIRMessage(message);\n    }\n\n\n    /**\n     * Send a raw Power Functions IR command\n     * @method ColorDistanceSensor#sendPFIRMessage\n     * @param {Buffer} message 2 byte payload making up a Power Functions protocol command. NOTE: Only specify nibbles 1-3, nibble 4 should be zeroed.\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public sendPFIRMessage (message: Buffer) {\n        if (this.isWeDo2SmartHub) {\n            throw new Error(\"Power Functions IR is not available on the WeDo 2.0 Smart Hub\");\n        } else {\n            const payload = Buffer.alloc(2);\n            payload[0] = (message[0] << 4) + (message[1] >> 4);\n            payload[1] = message[0] >> 4;\n            this.subscribe(Mode.PF_IR);\n            return this.writeDirect(0x07, payload);\n        }\n    }\n\n\n    /**\n     * Set the color of the LED on the sensor via a color value.\n     * @method ColorDistanceSensor#setColor\n     * @param {Color} color\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setColor (color: number | boolean) {\n        return new Promise<void>((resolve) => {\n            if (color === false) {\n                color = 0;\n            }\n            if (this.isWeDo2SmartHub) {\n                throw new Error(\"Setting LED color is not available on the WeDo 2.0 Smart Hub\");\n            } else {\n                this.subscribe(Mode.LED);\n                this.writeDirect(0x05, Buffer.from([color as number]));\n            }\n            return resolve();\n        });\n    }\n\n\n    private _pfPowerToPWM (power: number) {\n        return power & 15;\n    }\n\n\n}\n\nexport enum Mode {\n    COLOR = 0x00,\n    DISTANCE = 0x01,\n    LED = 0x05,\n    PF_IR = 0x07,\n    COLOR_AND_DISTANCE = 0x08\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"color\": Mode.COLOR,\n    \"distance\": Mode.DISTANCE,\n    \"colorAndDistance\": Mode.COLOR_AND_DISTANCE\n};\n\nexport enum Output {\n    RED = \"RED\",\n    BLUE = \"BLUE\"\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class CurrentSensor\n * @extends Device\n */\nexport class CurrentSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.CURRENT_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this.mode;\n\n        switch (mode) {\n            case Mode.CURRENT:\n                if (this.isWeDo2SmartHub) {\n                    const current =  message.readInt16LE(2) / 1000;\n                    this.notify(\"current\", { current });\n                } else {\n                    let maxCurrentValue = MaxCurrentValue[this.hub.type];\n                    if (maxCurrentValue === undefined) {\n                        maxCurrentValue = MaxCurrentValue[Consts.HubType.UNKNOWN];\n                    }\n                    let maxCurrentRaw = MaxCurrentRaw[this.hub.type];\n                    if (maxCurrentRaw === undefined) {\n                        maxCurrentRaw = MaxCurrentRaw[Consts.HubType.UNKNOWN];\n                    }\n                    const current = message.readUInt16LE(4) * maxCurrentValue / maxCurrentRaw;\n                    /**\n                     * Emits when a current change is detected.\n                     * @event CurrentSensor#current\n                     * @type {object}\n                     * @param {number} current\n                     */\n                    this.notify(\"current\", { current });\n                }\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    CURRENT = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"current\": Mode.CURRENT\n};\n\nconst MaxCurrentValue: {[hubType: number]: number} = {\n    [Consts.HubType.UNKNOWN]: 2444,\n    [Consts.HubType.TECHNIC_MEDIUM_HUB]: 4175,\n};\n\nconst MaxCurrentRaw: {[hubType: number]: number} = {\n    [Consts.HubType.UNKNOWN]: 4095,\n};\n","import { EventEmitter } from \"events\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class Device\n * @extends EventEmitter\n */\nexport class Device extends EventEmitter {\n\n    public autoSubscribe: boolean = true;\n    public values: {[event: string]: any} = {};\n\n    protected _mode: number | undefined;\n    protected _busy: boolean = false;\n    protected _finished: (() => void) | undefined;\n\n    private _hub: IDeviceInterface;\n    private _portId: number;\n    private _connected: boolean = true;\n    private _type: Consts.DeviceType;\n    private _modeMap: {[event: string]: number} = {};\n\n    private _isWeDo2SmartHub: boolean;\n    private _isVirtualPort: boolean = false;\n    private _eventTimer: NodeJS.Timer | null = null;\n\n    constructor (hub: IDeviceInterface, portId: number, modeMap: {[event: string]: number} = {}, type: Consts.DeviceType = Consts.DeviceType.UNKNOWN) {\n        super();\n        this._hub = hub;\n        this._portId = portId;\n        this._type = type;\n        this._modeMap = modeMap;\n        this._isWeDo2SmartHub = (this.hub.type === Consts.HubType.WEDO2_SMART_HUB);\n        this._isVirtualPort = this.hub.isPortVirtual(portId);\n\n        const eventAttachListener = (event: string) => {\n            if (event === \"detach\") {\n                return;\n            }\n            if (this.autoSubscribe) {\n                if (this._modeMap[event] !== undefined) {\n                    this.subscribe(this._modeMap[event]);\n                }\n            }\n        };\n\n        const deviceDetachListener = (device: Device) => {\n            if (device.portId === this.portId) {\n                this._connected = false;\n                this.hub.removeListener(\"detach\", deviceDetachListener);\n                this.emit(\"detach\");\n            }\n        };\n\n        for (const event in this._modeMap) {\n            if (this.hub.listenerCount(event) > 0) {\n                eventAttachListener(event);\n            }\n        }\n\n        this.hub.on(\"newListener\", eventAttachListener);\n        this.on(\"newListener\", eventAttachListener);\n        this.hub.on(\"detach\", deviceDetachListener);\n    }\n\n    /**\n     * @readonly\n     * @property {boolean} connected Check if the device is still attached.\n     */\n    public get connected () {\n        return this._connected;\n    }\n\n    /**\n     * @readonly\n     * @property {Hub} hub The Hub the device is attached to.\n     */\n    public get hub () {\n        return this._hub;\n    }\n\n    public get portId () {\n        return this._portId;\n    }\n\n    /**\n     * @readonly\n     * @property {string} portName The port the device is attached to.\n     */\n    public get portName () {\n        return this.hub.getPortNameForPortId(this.portId);\n    }\n\n    /**\n     * @readonly\n     * @property {number} type The type of the device\n     */\n    public get type () {\n        return this._type;\n    }\n\n    public get typeName () {\n        return Consts.DeviceTypeNames[this.type];\n    }\n\n    /**\n     * @readonly\n     * @property {number} mode The mode the device is currently in\n     */\n    public get mode () {\n        return this._mode;\n    }\n\n    protected get isWeDo2SmartHub () {\n        return this._isWeDo2SmartHub;\n    }\n\n    /**\n     * @readonly\n     * @property {boolean} isVirtualPort Is this device attached to a virtual port (ie. a combined device)\n     */\n    protected get isVirtualPort () {\n        return this._isVirtualPort;\n    }\n\n    public writeDirect (mode: number, data: Buffer) {\n        if (this.isWeDo2SmartHub) {\n            return this.send(Buffer.concat([Buffer.from([this.portId, 0x01, 0x02]), data]), Consts.BLECharacteristic.WEDO2_MOTOR_VALUE_WRITE);\n        } else {\n            return this.send(Buffer.concat([Buffer.from([0x81, this.portId, 0x11, 0x51, mode]), data]), Consts.BLECharacteristic.LPF2_ALL);\n        }\n    }\n\n    public send (data: Buffer, characteristic: string = Consts.BLECharacteristic.LPF2_ALL) {\n        this._ensureConnected();\n        return this.hub.send(data, characteristic);\n    }\n\n    public subscribe (mode: number) {\n        this._ensureConnected();\n        if (mode !== this._mode) {\n            this._mode = mode;\n            this.hub.subscribe(this.portId, this.type, mode);\n        }\n    }\n\n    public unsubscribe (mode: number) {\n        this._ensureConnected();\n    }\n\n    public receive (message: Buffer) {\n        this.notify(\"receive\", { message });\n    }\n\n    public notify (event: string, values: any) {\n        this.values[event] = values;\n        this.emit(event, values);\n        if (this.hub.listenerCount(event) > 0) {\n            this.hub.emit(event, this, values);\n        }\n    }\n\n    public requestUpdate () {\n        this.send(Buffer.from([0x21, this.portId, 0x00]));\n    }\n\n    public finish () {\n        this._busy = false;\n        if (this._finished) {\n            this._finished();\n            this._finished = undefined;\n        }\n    }\n\n    public setEventTimer (timer: NodeJS.Timer) {\n        this._eventTimer = timer;\n    }\n\n    public cancelEventTimer () {\n        if (this._eventTimer) {\n            clearTimeout(this._eventTimer);\n            this._eventTimer = null;\n        }\n    }\n\n    private _ensureConnected () {\n        if (!this.connected) {\n            throw new Error(\"Device is not connected\");\n        }\n    }\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class DuploTrainBaseColorSensor\n * @extends Device\n */\nexport class DuploTrainBaseColorSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.DUPLO_TRAIN_BASE_COLOR_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.COLOR:\n                if (message[4] <= 10) {\n                    const color = message[4];\n\n                    /**\n                     * Emits when a color sensor is activated.\n                     * @event DuploTrainBaseColorSensor#color\n                     * @type {object}\n                     * @param {Color} color\n                     */\n                    this.notify(\"color\", { color });\n                }\n                break;\n\n            case Mode.REFLECTIVITY:\n                const reflect = message[4];\n\n                /**\n                 * Emits when the light reflectivity changes.\n                 * @event DuploTrainBaseColorSensor#reflect\n                 * @type {object}\n                 * @param {number} reflect Percentage, from 0 to 100.\n                 */\n                this.notify(\"reflect\", { reflect });\n                break;\n\n            case Mode.RGB:\n                const red = Math.floor(message.readUInt16LE(4) / 4);\n                const green = Math.floor(message.readUInt16LE(6) / 4);\n                const blue = Math.floor(message.readUInt16LE(8) / 4);\n\n                /**\n                 * Emits when the light reflectivity changes.\n                 * @event DuploTrainBaseColorSensor#rgb\n                 * @type {object}\n                 * @param {number} red\n                 * @param {number} green\n                 * @param {number} blue\n                 */\n                this.notify(\"rgb\", { red, green, blue });\n                break;\n\n        }\n    }\n\n}\n\nexport enum Mode {\n    COLOR = 0x00,\n    REFLECTIVITY = 0x02,\n    RGB = 0x03\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"color\": Mode.COLOR,\n    \"reflect\": Mode.REFLECTIVITY,\n    \"rgb\": Mode.RGB\n};\n","import { BasicMotor } from \"./basicmotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class DuploTrainBaseMotor\n * @extends BasicMotor\n */\nexport class DuploTrainBaseMotor extends BasicMotor {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.DUPLO_TRAIN_BASE_MOTOR);\n    }\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class DuploTrainBaseSpeaker\n * @extends Device\n */\nexport class DuploTrainBaseSpeaker extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.DUPLO_TRAIN_BASE_SPEAKER);\n    }\n\n    /**\n     * Play a built-in train sound.\n     * @method DuploTrainBaseSpeaker#playSound\n     * @param {DuploTrainBaseSound} sound\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public playSound (sound: Consts.DuploTrainBaseSound) {\n        return new Promise<void>((resolve) => {\n            this.subscribe(Mode.SOUND);\n            this.writeDirect(0x01, Buffer.from([sound]));\n            return resolve();\n        });\n    }\n\n    /**\n     * Play a built-in system tone.\n     * @method DuploTrainBaseSpeaker#playTone\n     * @param {number} tone\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public playTone (tone: number) {\n        this.subscribe(Mode.TONE);\n        this.writeDirect(0x02, Buffer.from([tone]));\n    }\n\n}\n\nexport enum Mode {\n    SOUND = 0x01,\n    TONE = 0x02\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class DuploTraniBaseSpeedometer\n * @extends Device\n */\nexport class DuploTrainBaseSpeedometer extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.DUPLO_TRAIN_BASE_SPEEDOMETER);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.SPEED:\n                const speed = message.readInt16LE(4);\n\n                /**\n                 * Emits on a speed change.\n                 * @event DuploTrainBaseSpeedometer#speed\n                 * @type {object}\n                 * @param {number} speed\n                 */\n                this.notify(\"speed\", { speed });\n                break;\n\n        }\n    }\n\n}\n\nexport enum Mode {\n    SPEED = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"speed\": Mode.SPEED\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class HubLED\n * @extends Device\n */\nexport class HubLED extends Device {\n\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.HUB_LED);\n    }\n\n\n    /**\n     * Set the color of the LED on the Hub via a color value.\n     * @method HubLED#setColor\n     * @param {Color} color\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setColor (color: number | boolean) {\n        return new Promise<void>((resolve) => {\n            if (typeof color === \"boolean\") {\n                color = 0;\n            }\n            if (this.isWeDo2SmartHub) {\n                this.send(Buffer.from([0x06, 0x17, 0x01, 0x01]), Consts.BLECharacteristic.WEDO2_PORT_TYPE_WRITE);\n                this.send(Buffer.from([0x06, 0x04, 0x01, color]), Consts.BLECharacteristic.WEDO2_MOTOR_VALUE_WRITE);\n            } else {\n                this.subscribe(Mode.COLOR);\n                this.writeDirect(0x00, Buffer.from([color]));\n            }\n            return resolve();\n        });\n    }\n\n\n    /**\n     * Set the color of the LED on the Hub via RGB values.\n     * @method HubLED#setRGB\n     * @param {number} red\n     * @param {number} green\n     * @param {number} blue\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setRGB (red: number, green: number, blue: number) {\n        return new Promise<void>((resolve) => {\n            if (this.isWeDo2SmartHub) {\n                this.send(Buffer.from([0x06, 0x17, 0x01, 0x02]), Consts.BLECharacteristic.WEDO2_PORT_TYPE_WRITE);\n                this.send(Buffer.from([0x06, 0x04, 0x03, red, green, blue]), Consts.BLECharacteristic.WEDO2_MOTOR_VALUE_WRITE);\n            } else {\n                this.subscribe(Mode.RGB);\n                this.writeDirect(0x01, Buffer.from([red, green, blue]));\n            }\n            return resolve();\n        });\n    }\n\n\n}\n\nexport enum Mode {\n    COLOR = 0x00,\n    RGB = 0x01\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\nimport { calculateRamp } from \"../utils\";\n\n/**\n * @class Light\n * @extends Device\n */\nexport class Light extends Device {\n\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.LIGHT);\n    }\n\n\n    /**\n     * Set the light brightness.\n     * @method Light#setBrightness\n     * @param {number} brightness Brightness value between 0-100 (0 is off)\n     * @returns {Promise} Resolved upon successful completion of command.\n     */\n    public setBrightness (brightness: number, interrupt: boolean = true) {\n        if (interrupt) {\n            this.cancelEventTimer();\n        }\n        return new Promise<void>((resolve) => {\n            this.writeDirect(0x00, Buffer.from([brightness]));\n            return resolve();\n        });\n    }\n\n\n    /**\n     * Ramp the light brightness.\n     * @method Light#rampBrightness\n     * @param {number} fromBrightness Brightness value between 0-100 (0 is off)\n     * @param {number} toBrightness Brightness value between 0-100 (0 is off)\n     * @param {number} time How long the ramp should last (in milliseconds).\n     * @returns {Promise} Resolved upon successful completion of command.\n     */\n    public rampBrightness (fromBrightness: number, toBrightness: number, time: number) {\n        this.cancelEventTimer();\n        return new Promise((resolve) => {\n            calculateRamp(this, fromBrightness, toBrightness, time)\n            .on(\"changePower\", (power) => {\n                this.setBrightness(power, false);\n            })\n            .on(\"finished\", resolve);\n        });\n    }\n\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class MarioAccelerometer\n * @extends Device\n */\nexport class MarioAccelerometer extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.MARIO_ACCELEROMETER);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.ACCEL:\n                /**\n                 * Emits when accelerometer detects movement. Measured in mG.\n                 * @event MarioAccelerometer#accel\n                 * @type {object}\n                 * @param {number} x\n                 * @param {number} y\n                 * @param {number} z\n                 */\n                const x = message[4];\n                const y = message[5];\n                const z = message[6];\n                this.notify(\"accel\", { x, y, z });\n                break;\n            case Mode.GEST:\n                /**\n                 * Emits when a gesture is detected\n                 * @event MarioAccelerometer#gest\n                 * @type {object}\n                 * @param {number} gesture\n                 */\n                const gesture = message[4];\n                this.notify(\"gesture\", { gesture });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    ACCEL = 0x00,\n    GEST = 0x01,\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"accel\": Mode.ACCEL,\n    \"gesture\": Mode.GEST,\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class MarioBarcodeSensor\n * @extends Device\n */\nexport class MarioBarcodeSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.MARIO_BARCODE_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.BARCODE:\n                /**\n                 * Emits when the barcode sensor sees a barcode.\n                 * @event MarioBarcodeSensor#barcode\n                 * @type {object}\n                 * @param {number} id\n                 */\n                const barcode = message.readUInt16LE(4);\n                const color = message.readUInt16LE(6);\n                if (color === 0xffff) {\n                    // This is a barcode\n                    this.notify(\"barcode\", { barcode });\n                } else if (barcode === 0xffff) {\n                    // This is a color\n                    this.notify(\"barcode\", { color });\n                }\n                break;\n            case Mode.RGB:\n                /**\n                 * Emits when the barcode sensor sees a RGB color.\n                 * @event MarioBarcodeSensor#rgb\n                 * @type {object}\n                 * @param {number} r\n                 * @param {number} g\n                 * @param {number} b\n                 */\n                const r = message[4];\n                const g = message[5];\n                const b = message[6];\n                this.notify(\"rgb\", { r, g, b });\n                break;\n\n        }\n    }\n\n}\n\nexport enum Mode {\n    BARCODE = 0x00,\n    RGB = 0x01,\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"barcode\": Mode.BARCODE,\n    \"rgb\": Mode.RGB,\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class MarioPantsSensor\n * @extends Device\n */\nexport class MarioPantsSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.MARIO_PANTS_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.PANTS:\n                /**\n                 * Emits when the user changes the pants on Mario.\n                 * @event MarioPantsSensor#pants\n                 * @type {object}\n                 * @param {number} pants\n                 */\n                const pants = message[4];\n                this.notify(\"pants\", { pants });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    PANTS = 0x00,\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"pants\": Mode.PANTS,\n};\n","import { TachoMotor } from \"./tachomotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class MediumLinearMotor\n * @extends TachoMotor\n */\nexport class MediumLinearMotor extends TachoMotor {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.MEDIUM_LINEAR_MOTOR);\n    }\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class MotionSensor\n * @extends Device\n */\nexport class MotionSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.MOTION_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.DISTANCE:\n                let distance = message[this.isWeDo2SmartHub ? 2 : 4];\n                if (message[this.isWeDo2SmartHub ? 3 : 5] === 1) {\n                    distance = distance + 255;\n                }\n                distance *= 10;\n                /**\n                 * Emits when a distance sensor is activated.\n                 * @event MotionSensor#distance\n                 * @type {object}\n                 * @param {number} distance Distance, in millimeters.\n                 */\n                this.notify(\"distance\", { distance });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    DISTANCE = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"distance\": Mode.DISTANCE\n};\n","import { TachoMotor } from \"./tachomotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class MoveHubMediumLinearMotor\n * @extends TachoMotor\n */\nexport class MoveHubMediumLinearMotor extends TachoMotor {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.MOVE_HUB_MEDIUM_LINEAR_MOTOR);\n    }\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class MoveHubTiltSensor\n * @extends Device\n */\nexport class MoveHubTiltSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.MOVE_HUB_TILT_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.TILT:\n                /**\n                 * Emits when a tilt sensor is activated.\n                 * @event MoveHubTiltSensor#tilt\n                 * @type {object}\n                 * @param {number} x\n                 * @param {number} y\n                 */\n                const x = -message.readInt8(4);\n                const y = message.readInt8(5);\n                this.notify(\"tilt\", { x, y });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    TILT = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"tilt\": Mode.TILT\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class PiezoBuzzer\n * @extends Device\n */\nexport class PiezoBuzzer extends Device {\n\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.PIEZO_BUZZER);\n    }\n\n\n    /**\n     * Play a tone on the Hub's in-built buzzer\n     * @method PiezoBuzzer#playTone\n     * @param {number} frequency\n     * @param {number} time How long the tone should play for (in milliseconds).\n     * @returns {Promise} Resolved upon successful completion of command (ie. once the tone has finished playing).\n     */\n    public playTone (frequency: number, time: number) {\n        return new Promise((resolve) => {\n            const data = Buffer.from([0x05, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00]);\n            data.writeUInt16LE(frequency, 3);\n            data.writeUInt16LE(time, 5);\n            this.send(data, Consts.BLECharacteristic.WEDO2_MOTOR_VALUE_WRITE);\n            global.setTimeout(resolve, time);\n        });\n    }\n\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class RemoteControlButton\n * @extends Device\n */\nexport class RemoteControlButton extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.REMOTE_CONTROL_BUTTON);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.BUTTON_EVENTS:\n                /**\n                 * Emits when a button on the remote is pressed or released.\n                 * @event RemoteControlButton#button\n                 * @type {object}\n                 * @param {number} event\n                 */\n                const event = message[4];\n                this.notify(\"remoteButton\", { event });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    BUTTON_EVENTS = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"remoteButton\": Mode.BUTTON_EVENTS\n};\n\nexport const ButtonState: {[state: string]: number} = {\n    \"UP\": 0x01,\n    \"DOWN\": 0xff,\n    \"STOP\": 0x7f,\n    \"RELEASED\": 0x00,\n};\n","import { BasicMotor } from \"./basicmotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class SimpleMediumLinearMotor\n * @extends Device\n */\nexport class SimpleMediumLinearMotor extends BasicMotor {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.SIMPLE_MEDIUM_LINEAR_MOTOR);\n    }\n\n}\n","import { BasicMotor } from \"./basicmotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\nimport { mapSpeed } from \"../utils\";\n\n/**\n * @class TachoMotor\n * @extends BasicMotor\n */\nexport class TachoMotor extends BasicMotor {\n\n    protected _brakeStyle: Consts.BrakingStyle = Consts.BrakingStyle.BRAKE;\n    protected _maxPower: number = 100;\n    public useAccelerationProfile: boolean = true;\n    public useDecelerationProfile: boolean = true;\n\n    constructor (hub: IDeviceInterface, portId: number, modeMap: {[event: string]: number} = {}, type: Consts.DeviceType = Consts.DeviceType.UNKNOWN) {\n        super(hub, portId, Object.assign({}, modeMap, ModeMap), type);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.ROTATION:\n                const degrees = message.readInt32LE(this.isWeDo2SmartHub ? 2 : 4);\n                /**\n                 * Emits when a rotation sensor is activated.\n                 * @event TachoMotor#rotate\n                 * @type {object}\n                 * @param {number} rotation\n                 */\n                this.notify(\"rotate\", { degrees });\n                break;\n        }\n    }\n\n\n    /**\n     * Set the braking style of the motor.\n     *\n     * Note: This applies to setSpeed, rotateByDegrees, and gotoAngle.\n     * @method TachoMotor#setBrakingStyle\n     * @param {number} style Either BRAKE or HOLD\n     */\n    public setBrakingStyle (style: Consts.BrakingStyle) {\n        this._brakeStyle = style;\n    }\n\n\n    /**\n     * Set the max power of the motor.\n     *\n     * Note: This applies to setSpeed, rotateByDegrees, and gotoAngle.\n     * @method TachoMotor#setMaxPower\n     * @param {number} style Either BRAKE or HOLD\n     */\n    public setMaxPower (maxPower: number) {\n        this._maxPower = maxPower;\n    }\n\n\n    /**\n     * Set the global acceleration time\n     * @method TachoMotor#setAccelerationTime\n     * @param {number} time How long acceleration should last (in milliseconds).\n     * @returns {Promise} Resolved upon successful completion of command (ie. once the motor is finished).\n     */\n    public setAccelerationTime (time: number, profile: number = 0x00) {\n        const message = Buffer.from([0x81, this.portId, 0x11, 0x05, 0x00, 0x00, profile]);\n        message.writeUInt16LE(time, 4);\n        this.send(message);\n    }\n\n\n    /**\n     * Set the global deceleration time\n     * @method TachoMotor#setDecelerationTime\n     * @param {number} time How long deceleration should last (in milliseconds).\n     * @returns {Promise} Resolved upon successful completion of command (ie. once the motor is finished).\n     */\n    public setDecelerationTime (time: number, profile: number = 0x00) {\n        const message = Buffer.from([0x81, this.portId, 0x11, 0x06, 0x00, 0x00, profile]);\n        message.writeUInt16LE(time, 4);\n        this.send(message);\n    }\n\n\n    /**\n     * Set the motor speed.\n     * @method TachoMotor#setSpeed\n     * @param {number} speed For forward, a value between 1 - 100 should be set. For reverse, a value between -1 to -100. Stop is 0.\n     * @param {number} time How long the motor should run for (in milliseconds).\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setSpeed (speed: [number, number] | number, time: number | undefined) {\n        if (!this.isVirtualPort && speed instanceof Array) {\n            throw new Error(\"Only virtual ports can accept multiple speeds\");\n        }\n        if (this.isWeDo2SmartHub) {\n            throw new Error(\"Motor speed is not available on the WeDo 2.0 Smart Hub\");\n        }\n        this.cancelEventTimer();\n        return new Promise<void>((resolve) => {\n            this._busy = true;\n            if (speed === undefined || speed === null) {\n                speed = 100;\n            }\n            let message;\n            if (time !== undefined) {\n                if (speed instanceof Array) {\n                    message = Buffer.from([0x81, this.portId, 0x11, 0x0a, 0x00, 0x00, mapSpeed(speed[0]), mapSpeed(speed[1]), this._maxPower, this._brakeStyle, this.useProfile()]);\n                } else {\n                    message = Buffer.from([0x81, this.portId, 0x11, 0x09, 0x00, 0x00, mapSpeed(speed), this._maxPower, this._brakeStyle, this.useProfile()]);\n                }\n                message.writeUInt16LE(time, 4);\n            } else {\n                if (speed instanceof Array) {\n                    message = Buffer.from([0x81, this.portId, 0x11, 0x08, mapSpeed(speed[0]), mapSpeed(speed[1]), this._maxPower, this.useProfile()]);\n                } else {\n                    message = Buffer.from([0x81, this.portId, 0x11, 0x07, mapSpeed(speed), this._maxPower, this.useProfile()]);\n                }\n            }\n            this.send(message);\n            this._finished = () => {\n                return resolve();\n            };\n        });\n    }\n\n    /**\n     * Rotate a motor by a given amount of degrees.\n     * @method TachoMotor#rotateByDegrees\n     * @param {number} degrees How much the motor should be rotated (in degrees).\n     * @param {number} [speed=100] For forward, a value between 1 - 100 should be set. For reverse, a value between -1 to -100.\n     * @returns {Promise} Resolved upon successful completion of command (ie. once the motor is finished).\n     */\n    public rotateByDegrees (degrees: number, speed: [number, number] | number) {\n        if (!this.isVirtualPort && speed instanceof Array) {\n            throw new Error(\"Only virtual ports can accept multiple speeds\");\n        }\n        if (this.isWeDo2SmartHub) {\n            throw new Error(\"Rotation is not available on the WeDo 2.0 Smart Hub\");\n        }\n        this.cancelEventTimer();\n        return new Promise<void>((resolve) => {\n            this._busy = true;\n            if (speed === undefined || speed === null) {\n                speed = 100;\n            }\n            let message;\n            if (speed instanceof Array) {\n                message = Buffer.from([0x81, this.portId, 0x11, 0x0c, 0x00, 0x00, 0x00, 0x00, mapSpeed(speed[0]), mapSpeed(speed[1]), this._maxPower, this._brakeStyle, this.useProfile()]);\n            } else {\n                message = Buffer.from([0x81, this.portId, 0x11, 0x0b, 0x00, 0x00, 0x00, 0x00, mapSpeed(speed), this._maxPower, this._brakeStyle, this.useProfile()]);\n            }\n            message.writeUInt32LE(degrees, 4);\n            this.send(message);\n            this._finished = () => {\n                return resolve();\n            };\n        });\n    }\n\n\n    protected useProfile () {\n        let value = 0x00;\n        if (this.useAccelerationProfile) {\n            value += 0x01;\n        }\n        if (this.useDecelerationProfile) {\n            value += 0x02;\n        }\n        return value;\n    }\n\n\n}\n\nexport enum Mode {\n    ROTATION = 0x02\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"rotate\": Mode.ROTATION\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicColorSensor\n * @extends Device\n */\nexport class TechnicColorSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.TECHNIC_COLOR_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.COLOR:\n                if (message[4] <= 10) {\n                    const color = message[4];\n\n                    /**\n                     * Emits when a color sensor is activated.\n                     * @event TechnicColorSensor#color\n                     * @type {object}\n                     * @param {Color} color\n                     */\n                    this.notify(\"color\", { color });\n                }\n                break;\n\n            case Mode.REFLECTIVITY:\n                const reflect = message[4];\n\n                /**\n                 * Emits when the light reflectivity changes.\n                 * @event TechnicColorSensor#reflect\n                 * @type {object}\n                 * @param {number} reflect Percentage, from 0 to 100.\n                 */\n                this.notify(\"reflect\", { reflect });\n                break;\n\n            case Mode.AMBIENT_LIGHT:\n                const ambient = message[4];\n\n                /**\n                 * Emits when the ambient light changes.\n                 * @event TechnicColorSensor#ambient\n                 * @type {object}\n                 * @param {number} ambient Percentage, from 0 to 100.\n                 */\n                this.notify(\"ambient\", { ambient });\n                break;\n        }\n    }\n\n    /**\n     * Set the brightness (or turn on/off) of the lights around the sensor.\n     * @method TechnicColorSensor#setBrightness\n     * @param {number} firstSegment First light segment. 0-100 brightness.\n     * @param {number} secondSegment Second light segment. 0-100 brightness.\n     * @param {number} thirdSegment Third light segment. 0-100 brightness.\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setBrightness (firstSegment: number, secondSegment: number, thirdSegment: number) {\n        this.writeDirect(0x03, Buffer.from([firstSegment, secondSegment, thirdSegment]));\n    }\n\n}\n\nexport enum Mode {\n    COLOR = 0x00,\n    REFLECTIVITY = 0x01,\n    AMBIENT_LIGHT = 0x02\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"color\": Mode.COLOR,\n    \"reflect\": Mode.REFLECTIVITY,\n    \"ambient\": Mode.AMBIENT_LIGHT\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicDistanceSensor\n * @extends Device\n */\nexport class TechnicDistanceSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.TECHNIC_DISTANCE_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.DISTANCE:\n                const distance = message.readUInt16LE(4);\n\n                /**\n                 * Emits when the detected distance changes (Slow sampling covers 40mm to 2500mm).\n                 * @event TechnicDistanceSensor#distance\n                 * @type {object}\n                 * @param {number} distance Distance, from 40 to 2500mm\n                 */\n                this.notify(\"distance\", { distance });\n                break;\n\n            case Mode.FAST_DISTANCE:\n                const fastDistance = message.readUInt16LE(4);\n\n                /**\n                 * Emits when the detected distance changes (Fast sampling covers 50mm to 320mm).\n                 * @event TechnicDistanceSensor#fastDistance\n                 * @type {object}\n                 * @param {number} fastDistance Distance, from 50 to 320mm\n                 */\n                this.notify(\"fastDistance\", { fastDistance });\n                break;\n        }\n    }\n\n    /**\n     * Set the brightness (or turn on/off) of the lights around the eyes.\n     * @method TechnicDistanceSensor#setBrightness\n     * @param {number} topLeft Top left quadrant (above left eye). 0-100 brightness.\n     * @param {number} bottomLeft Bottom left quadrant (below left eye). 0-100 brightness.\n     * @param {number} topRight Top right quadrant (above right eye). 0-100 brightness.\n     * @param {number} bottomRight Bottom right quadrant (below right eye). 0-100 brightness.\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setBrightness (topLeft: number, bottomLeft: number, topRight: number, bottomRight: number) {\n        this.writeDirect(0x05, Buffer.from([topLeft, topRight, bottomLeft, bottomRight]));\n    }\n\n}\n\nexport enum Mode {\n    DISTANCE = 0x00,\n    FAST_DISTANCE = 0x01\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"distance\": Mode.DISTANCE,\n    \"fastDistance\": Mode.FAST_DISTANCE\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicForceSensor\n * @extends Device\n */\nexport class TechnicForceSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.TECHNIC_FORCE_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.FORCE:\n                const force = message[this.isWeDo2SmartHub ? 2 : 4] / 10;\n\n                /**\n                 * Emits when force is applied.\n                 * @event TechnicForceSensor#force\n                 * @type {object}\n                 * @param {number} force Force, in newtons (0-10).\n                 */\n                this.notify(\"force\", { force });\n                break;\n\n            case Mode.TOUCHED:\n                const touched = message[4] ? true : false;\n\n                /**\n                 * Emits when the sensor is touched.\n                 * @event TechnicForceSensor#touch\n                 * @type {object}\n                 * @param {boolean} touch Touched on/off (boolean).\n                 */\n                this.notify(\"touched\", { touched });\n                break;\n\n            case Mode.TAPPED:\n                const tapped = message[4];\n\n                /**\n                 * Emits when the sensor is tapped.\n                 * @event TechnicForceSensor#tapped\n                 * @type {object}\n                 * @param {number} tapped How hard the sensor was tapped, from 0-3.\n                 */\n                this.notify(\"tapped\", { tapped });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    FORCE = 0x00,\n    TOUCHED = 0x01,\n    TAPPED = 0x02\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"force\": Mode.FORCE,\n    \"touched\": Mode.TOUCHED,\n    \"tapped\": Mode.TAPPED\n};\n","import { AbsoluteMotor } from \"./absolutemotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicLargeAngularMotor\n * @extends AbsoluteMotor\n */\nexport class TechnicLargeAngularMotor extends AbsoluteMotor {\n\n    constructor (hub: IDeviceInterface, portId: number, modeMap: {[event: string]: number} = {}, type: Consts.DeviceType = Consts.DeviceType.TECHNIC_LARGE_ANGULAR_MOTOR) {\n        super(hub, portId, {}, type);\n    }\n\n}\n","import { AbsoluteMotor } from \"./absolutemotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicLargeLinearMotor\n * @extends AbsoluteMotor\n */\nexport class TechnicLargeLinearMotor extends AbsoluteMotor {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.TECHNIC_LARGE_LINEAR_MOTOR);\n    }\n\n}\n","import { AbsoluteMotor } from \"./absolutemotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicMediumAngularMotor\n * @extends AbsoluteMotor\n */\nexport class TechnicMediumAngularMotor extends AbsoluteMotor {\n\n    constructor (hub: IDeviceInterface, portId: number, modeMap: {[event: string]: number} = {}, type: Consts.DeviceType = Consts.DeviceType.TECHNIC_MEDIUM_ANGULAR_MOTOR) {\n        super(hub, portId, {}, type);\n    }\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicMediumHubAccelerometerSensor\n * @extends Device\n */\nexport class TechnicMediumHubAccelerometerSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.TECHNIC_MEDIUM_HUB_ACCELEROMETER);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.ACCEL:\n                /**\n                 * Emits when accelerometer detects movement. Measured in mG.\n                 * @event TechnicMediumHubAccelerometerSensor#accel\n                 * @type {object}\n                 * @param {number} x\n                 * @param {number} y\n                 * @param {number} z\n                 */\n                const x = Math.round(message.readInt16LE(4) / 4.096);\n                const y = Math.round(message.readInt16LE(6) / 4.096);\n                const z = Math.round(message.readInt16LE(8) / 4.096);\n                this.notify(\"accel\", { x, y, z });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    ACCEL = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"accel\": Mode.ACCEL\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicMediumHubGyroSensor\n * @extends Device\n */\nexport class TechnicMediumHubGyroSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.TECHNIC_MEDIUM_HUB_GYRO_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.GYRO:\n                /**\n                 * Emits when gyroscope detects movement. Measured in DPS - degrees per second.\n                 * @event TechnicMediumHubGyroSensor#gyro\n                 * @type {object}\n                 * @param {number} x\n                 * @param {number} y\n                 * @param {number} z\n                 */\n                const x = Math.round(message.readInt16LE(4) * 7 / 400);\n                const y = Math.round(message.readInt16LE(6) * 7 / 400);\n                const z = Math.round(message.readInt16LE(8) * 7 / 400);\n                this.notify(\"gyro\", { x, y, z });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    GYRO = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"gyro\": Mode.GYRO\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicMediumHubTiltSensor\n * @extends Device\n */\nexport class TechnicMediumHubTiltSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.TECHNIC_MEDIUM_HUB_TILT_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.TILT:\n                /**\n                 * Emits when a tilt sensor is activated.\n                 * @event TechnicMediumHubTiltSensor#tilt\n                 * @type {object}\n                 * @param {number} x\n                 * @param {number} y\n                 * @param {number} z\n                 */\n                const z = -message.readInt16LE(4);\n                const y = message.readInt16LE(6);\n                const x = message.readInt16LE(8);\n                this.notify(\"tilt\", { x, y, z });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    TILT = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"tilt\": Mode.TILT\n};\n","import { AbsoluteMotor } from \"./absolutemotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicXLargeLinearMotor\n * @extends AbsoluteMotor\n */\nexport class TechnicXLargeLinearMotor extends AbsoluteMotor {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.TECHNIC_XLARGE_LINEAR_MOTOR);\n    }\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TiltSensor\n * @extends Device\n */\nexport class TiltSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.TILT_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.TILT:\n                const x = message.readInt8(this.isWeDo2SmartHub ? 2 : 4);\n                const y = message.readInt8(this.isWeDo2SmartHub ? 3 : 5);\n                /**\n                 * Emits when a tilt sensor is activated.\n                 * @event TiltSensor#tilt\n                 * @type {object}\n                 * @param {number} x\n                 * @param {number} y\n                 */\n                this.notify(\"tilt\", { x, y });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    TILT = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"tilt\": Mode.TILT\n};\n","import { BasicMotor } from \"./basicmotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TrainMotor\n * @extends BasicMotor\n */\nexport class TrainMotor extends BasicMotor {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.TRAIN_MOTOR);\n    }\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class VoltageSensor\n * @extends Device\n */\nexport class VoltageSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.VOLTAGE_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.VOLTAGE:\n                if (this.isWeDo2SmartHub) {\n                    const voltage = message.readInt16LE(2) / 40;\n                    this.notify(\"voltage\", { voltage });\n                } else {\n                    let maxVoltageValue = MaxVoltageValue[this.hub.type];\n                    if (maxVoltageValue === undefined) {\n                        maxVoltageValue = MaxVoltageValue[Consts.HubType.UNKNOWN];\n                    }\n                    let maxVoltageRaw = MaxVoltageRaw[this.hub.type];\n                    if (maxVoltageRaw === undefined) {\n                        maxVoltageRaw = MaxVoltageRaw[Consts.HubType.UNKNOWN];\n                    }\n                    const voltage = message.readUInt16LE(4) * maxVoltageValue / maxVoltageRaw;\n                    /**\n                     * Emits when a voltage change is detected.\n                     * @event VoltageSensor#voltage\n                     * @type {object}\n                     * @param {number} voltage\n                     */\n                    this.notify(\"voltage\", { voltage });\n                }\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    VOLTAGE = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"voltage\": Mode.VOLTAGE\n};\n\nconst MaxVoltageValue: {[hubType: number]: number} = {\n    [Consts.HubType.UNKNOWN]: 9.615,\n    [Consts.HubType.DUPLO_TRAIN_BASE]: 6.4,\n    [Consts.HubType.REMOTE_CONTROL]: 6.4,\n};\n\nconst MaxVoltageRaw: {[hubType: number]: number} = {\n    [Consts.HubType.UNKNOWN]: 3893,\n    [Consts.HubType.DUPLO_TRAIN_BASE]: 3047,\n    [Consts.HubType.REMOTE_CONTROL]: 3200,\n    [Consts.HubType.TECHNIC_MEDIUM_HUB]: 4095,\n};\n","import { EventEmitter } from \"events\";\n\nimport { IBLEAbstraction } from \"../interfaces\";\n\nimport { ColorDistanceSensor } from \"../devices/colordistancesensor\";\nimport { CurrentSensor } from \"../devices/currentsensor\";\nimport { Device } from \"../devices/device\";\n\nimport { DuploTrainBaseColorSensor } from \"../devices/duplotrainbasecolorsensor\";\nimport { DuploTrainBaseMotor } from \"../devices/duplotrainbasemotor\";\nimport { DuploTrainBaseSpeaker } from \"../devices/duplotrainbasespeaker\";\nimport { DuploTrainBaseSpeedometer } from \"../devices/duplotrainbasespeedometer\";\n\nimport { HubLED } from \"../devices/hubled\";\nimport { Light } from \"../devices/light\";\nimport { MarioAccelerometer } from \"../devices/marioaccelerometer\";\nimport { MarioBarcodeSensor } from \"../devices/mariobarcodesensor\";\nimport { MarioPantsSensor } from \"../devices/mariopantssensor\";\nimport { MediumLinearMotor } from \"../devices/mediumlinearmotor\";\nimport { MotionSensor } from \"../devices/motionsensor\";\nimport { MoveHubMediumLinearMotor } from \"../devices/movehubmediumlinearmotor\";\nimport { MoveHubTiltSensor } from \"../devices/movehubtiltsensor\";\nimport { PiezoBuzzer } from \"../devices/piezobuzzer\";\nimport { RemoteControlButton } from \"../devices/remotecontrolbutton\";\nimport { SimpleMediumLinearMotor } from \"../devices/simplemediumlinearmotor\";\nimport { TechnicColorSensor } from \"../devices/techniccolorsensor\";\nimport { TechnicDistanceSensor } from \"../devices/technicdistancesensor\";\nimport { TechnicForceSensor } from \"../devices/technicforcesensor\";\nimport { TechnicLargeAngularMotor } from \"../devices/techniclargeangularmotor\";\nimport { TechnicLargeLinearMotor } from \"../devices/techniclargelinearmotor\";\nimport { TechnicMediumAngularMotor } from \"../devices/technicmediumangularmotor\";\nimport { TechnicMediumHubAccelerometerSensor } from \"../devices/technicmediumhubaccelerometersensor\";\nimport { TechnicMediumHubGyroSensor } from \"../devices/technicmediumhubgyrosensor\";\nimport { TechnicMediumHubTiltSensor } from \"../devices/technicmediumhubtiltsensor\";\nimport { TechnicXLargeLinearMotor } from \"../devices/technicxlargelinearmotor\";\nimport { TiltSensor } from \"../devices/tiltsensor\";\nimport { TrainMotor } from \"../devices/trainmotor\";\nimport { VoltageSensor } from \"../devices/voltagesensor\";\n\nimport * as Consts from \"../consts\";\n\nimport Debug = require(\"debug\");\nconst debug = Debug(\"basehub\");\n\n\n/**\n * @class BaseHub\n * @extends EventEmitter\n */\nexport class BaseHub extends EventEmitter {\n\n    protected _attachedDevices: {[portId: number]: Device} = {};\n\n    protected _name: string = \"\";\n    protected _firmwareVersion: string = \"0.0.00.0000\";\n    protected _hardwareVersion: string = \"0.0.00.0000\";\n    protected _primaryMACAddress: string = \"00:00:00:00:00:00\";\n    protected _batteryLevel: number = 100;\n    protected _rssi: number = -60;\n    protected _portMap: {[portName: string]: number} = {};\n    protected _virtualPorts: number[] = [];\n\n    protected _bleDevice: IBLEAbstraction;\n\n    private _type: Consts.HubType;\n    private _attachCallbacks: ((device: Device) => boolean)[] = [];\n\n    constructor (bleDevice: IBLEAbstraction, portMap: {[portName: string]: number} = {}, type: Consts.HubType = Consts.HubType.UNKNOWN) {\n        super();\n        this.setMaxListeners(23); // Technic Medium Hub has 9 built in devices + 4 external ports. Node.js throws a warning after 10 attached event listeners.\n        this._type = type;\n        this._bleDevice = bleDevice;\n        this._portMap = Object.assign({}, portMap);\n        bleDevice.on(\"disconnect\", () => {\n            /**\n             * Emits when the hub is disconnected.\n             * @event Hub#disconnect\n             */\n            this.emit(\"disconnect\");\n        });\n    }\n\n\n    /**\n     * @readonly\n     * @property {string} name Name of the hub\n     */\n    public get name () {\n        return this._bleDevice.name;\n    }\n\n\n    /**\n     * @readonly\n     * @property {string} type Hub type\n     */\n    public get type () {\n        return this._type;\n    }\n\n\n    /**\n     * @readonly\n     * @property {string[]} ports Array of port names\n     */\n    public get ports () {\n        return Object.keys(this._portMap);\n    }\n\n\n    /**\n     * @readonly\n     * @property {string} firmwareVersion Firmware version of the hub\n     */\n    public get firmwareVersion () {\n        return this._firmwareVersion;\n    }\n\n\n    /**\n     * @readonly\n     * @property {string} hardwareVersion Hardware version of the hub\n     */\n    public get hardwareVersion () {\n        return this._hardwareVersion;\n    }\n\n\n    /**\n     * @readonly\n     * @property {string} primaryMACAddress Primary MAC address of the hub\n     */\n    public get primaryMACAddress () {\n        return this._primaryMACAddress;\n    }\n\n\n    /**\n     * @readonly\n     * @property {string} uuid UUID of the hub\n     */\n    public get uuid () {\n        return this._bleDevice.uuid;\n    }\n\n\n    /**\n     * @readonly\n     * @property {number} batteryLevel Battery level of the hub (Percentage between 0-100)\n     */\n    public get batteryLevel () {\n        return this._batteryLevel;\n    }\n\n\n    /**\n     * @readonly\n     * @property {number} rssi Signal strength of the hub\n     */\n    public get rssi () {\n        return this._rssi;\n    }\n\n\n    /**\n     * Connect to the Hub.\n     * @method Hub#connect\n     * @returns {Promise} Resolved upon successful connect.\n     */\n    public connect () {\n        if (this._bleDevice.connecting) {\n            throw new Error(\"Already connecting\");\n        } else if (this._bleDevice.connected) {\n            throw new Error(\"Already connected\");\n        }\n        return this._bleDevice.connect();\n    }\n\n\n    /**\n     * Disconnect the Hub.\n     * @method Hub#disconnect\n     * @returns {Promise} Resolved upon successful disconnect.\n     */\n    public disconnect () {\n        return this._bleDevice.disconnect();\n    }\n\n\n    /**\n     * Retrieves the device attached to a given port.\n     * @method Hub#getDeviceAtPort\n     * @param {string} portName The name of the port to retrieve the device from.\n     * @returns {Device | undefined} The device attached to the port.\n     */\n    public getDeviceAtPort (portName: string) {\n        const portId = this._portMap[portName];\n        if (portId !== undefined) {\n            return this._attachedDevices[portId];\n        } else {\n            return undefined;\n        }\n    }\n\n\n    /**\n     * Retrieves the device attached to a given port, waiting until one is attached if there isn't one.\n     *\n     * Note: If a device is never attached, the returned promise may never resolve.\n     * @method Hub#waitForDeviceAtPort\n     * @param {string} portName The name of the port to retrieve the device from.\n     * @returns {Promise} Resolved once a device is attached, or resolved immediately if a device is already attached.\n     */\n    public waitForDeviceAtPort (portName: string) {\n        return new Promise((resolve) => {\n            const existingDevice = this.getDeviceAtPort(portName);\n            if (existingDevice) {\n                return resolve(existingDevice);\n            }\n            this._attachCallbacks.push((device) => {\n                if (device.portName === portName) {\n                    resolve(device);\n                    return true;\n                } else {\n                    return false;\n                }\n            });\n        });\n    }\n\n\n    /**\n     * Retrieves all attached devices.\n     * @method Hub#getDevices\n     * @returns {Device[]} Array of all attached devices.\n     */\n    public getDevices () {\n        return Object.values(this._attachedDevices);\n    }\n\n\n    /**\n     * Retrieves an array of devices of the specified type.\n     * @method Hub#getDevicesByType\n     * @param {number} deviceType The device type to lookup.\n     * @returns {Device[]} Array of all devices of the specified type.\n     */\n    public getDevicesByType (deviceType: number) {\n        return this.getDevices().filter((device) => device.type === deviceType);\n    }\n\n\n    /**\n     * Retrieves the first device attached of the specified type, waiting until one is attached if there isn't one.\n     *\n     * Note: If a device is never attached, the returned promise may never resolve.\n     * @method Hub#waitForDeviceByType\n     * @param {number} deviceType The device type to lookup.\n     * @returns {Promise} Resolved once a device is attached, or resolved immediately if a device is already attached.\n     */\n    public waitForDeviceByType (deviceType: number) {\n        return new Promise((resolve) => {\n            const existingDevices = this.getDevicesByType(deviceType);\n            if (existingDevices.length >= 1) {\n                return resolve(existingDevices[0]);\n            }\n            this._attachCallbacks.push((device) => {\n                if (device.type === deviceType) {\n                    resolve(device);\n                    return true;\n                } else {\n                    return false;\n                }\n            });\n        });\n    }\n\n\n    public getPortNameForPortId (portId: number) {\n        for (const port of Object.keys(this._portMap)) {\n            if (this._portMap[port] === portId) {\n                return port;\n            }\n        }\n        return;\n    }\n\n\n    public isPortVirtual (portId: number) {\n        return (this._virtualPorts.indexOf(portId) > -1);\n    }\n\n\n    /**\n     * Sleep a given amount of time.\n     *\n     * Note: This is a helper method to make it easier to add delays into a chain of commands.\n     * @method Hub#sleep\n     * @param {number} delay How long to sleep (in milliseconds).\n     * @returns {Promise} Resolved after the delay is finished.\n     */\n    public sleep (delay: number) {\n        return new Promise((resolve) => {\n            global.setTimeout(resolve, delay);\n        });\n    }\n\n\n    /**\n     * Wait until a given list of concurrently running commands are complete.\n     *\n     * Note: This is a helper method to make it easier to wait for concurrent commands to complete.\n     * @method Hub#wait\n     * @param {Array<Promise<any>>} commands Array of executing commands.\n     * @returns {Promise} Resolved after the commands are finished.\n     */\n    public wait (commands: Promise<any>[]) {\n        return Promise.all(commands);\n    }\n\n\n    public send (message: Buffer, uuid: string) {\n        return Promise.resolve();\n    }\n\n\n    public subscribe (portId: number, deviceType: number, mode: number) {\n        // NK Do nothing here\n    }\n\n\n    public unsubscribe (portId: number, deviceType: number, mode: number) {\n        // NK Do nothing here\n    }\n\n\n    public manuallyAttachDevice(deviceType: number, portId: number) {\n        if (!this._attachedDevices[portId]) {\n            debug(`No device attached to portId ${portId}, creating and attaching device type ${deviceType}`);\n            const device = this._createDevice(deviceType, portId);\n            this._attachDevice(device);\n            return device;\n        } else {\n            if (this._attachedDevices[portId].type === deviceType) {\n                debug(`Device of ${deviceType} already attached to portId ${portId}, returning existing device`);\n                return this._attachedDevices[portId];\n            } else {\n                throw new Error(`Already a different type of device attached to portId ${portId}. Only use this method when you are certain what's attached.`);\n            }\n        }\n    }\n\n\n    protected _attachDevice (device: Device) {\n        if (this._attachedDevices[device.portId] && this._attachedDevices[device.portId].type === device.type) {\n            return;\n        }\n        this._attachedDevices[device.portId] = device;\n\n        /**\n         * Emits when a device is attached to the Hub.\n         * @event Hub#attach\n         * @param {Device} device\n         */\n        this.emit(\"attach\", device);\n        debug(`Attached device type ${device.type} (${Consts.DeviceTypeNames[device.type]}) on port ${device.portName} (${device.portId})`);\n\n        let i = this._attachCallbacks.length;\n        while (i--) {\n            const callback = this._attachCallbacks[i];\n            if (callback(device)) {\n                this._attachCallbacks.splice(i, 1);\n            }\n        }\n    }\n\n\n    protected _detachDevice (device: Device) {\n        delete this._attachedDevices[device.portId];\n        /**\n         * Emits when a device is detached from the Hub.\n         * @event Hub#detach\n         * @param {Device} device\n         */\n        this.emit(\"detach\", device);\n        debug(`Detached device type ${device.type} (${Consts.DeviceTypeNames[device.type]}) on port ${device.portName} (${device.portId})`);\n    }\n\n\n    protected _createDevice (deviceType: number, portId: number) {\n        let constructor;\n\n        // NK TODO: This needs to go in a better place\n        const deviceConstructors: {[type: number]: typeof Device} = {\n            [Consts.DeviceType.LIGHT]: Light,\n            [Consts.DeviceType.TRAIN_MOTOR]: TrainMotor,\n            [Consts.DeviceType.SIMPLE_MEDIUM_LINEAR_MOTOR]: SimpleMediumLinearMotor,\n            [Consts.DeviceType.MOVE_HUB_MEDIUM_LINEAR_MOTOR]: MoveHubMediumLinearMotor,\n            [Consts.DeviceType.MOTION_SENSOR]: MotionSensor,\n            [Consts.DeviceType.TILT_SENSOR]: TiltSensor,\n            [Consts.DeviceType.MOVE_HUB_TILT_SENSOR]: MoveHubTiltSensor,\n            [Consts.DeviceType.PIEZO_BUZZER]: PiezoBuzzer,\n            [Consts.DeviceType.TECHNIC_COLOR_SENSOR]: TechnicColorSensor,\n            [Consts.DeviceType.TECHNIC_DISTANCE_SENSOR]: TechnicDistanceSensor,\n            [Consts.DeviceType.TECHNIC_FORCE_SENSOR]: TechnicForceSensor,\n            [Consts.DeviceType.TECHNIC_MEDIUM_HUB_TILT_SENSOR]: TechnicMediumHubTiltSensor,\n            [Consts.DeviceType.TECHNIC_MEDIUM_HUB_GYRO_SENSOR]: TechnicMediumHubGyroSensor,\n            [Consts.DeviceType.TECHNIC_MEDIUM_HUB_ACCELEROMETER]: TechnicMediumHubAccelerometerSensor,\n            [Consts.DeviceType.MEDIUM_LINEAR_MOTOR]: MediumLinearMotor,\n            [Consts.DeviceType.TECHNIC_MEDIUM_ANGULAR_MOTOR]: TechnicMediumAngularMotor,\n            [Consts.DeviceType.TECHNIC_LARGE_ANGULAR_MOTOR]: TechnicLargeAngularMotor,\n            [Consts.DeviceType.TECHNIC_LARGE_LINEAR_MOTOR]: TechnicLargeLinearMotor,\n            [Consts.DeviceType.TECHNIC_XLARGE_LINEAR_MOTOR]: TechnicXLargeLinearMotor,\n            [Consts.DeviceType.COLOR_DISTANCE_SENSOR]: ColorDistanceSensor,\n            [Consts.DeviceType.VOLTAGE_SENSOR]: VoltageSensor,\n            [Consts.DeviceType.CURRENT_SENSOR]: CurrentSensor,\n            [Consts.DeviceType.REMOTE_CONTROL_BUTTON]: RemoteControlButton,\n            [Consts.DeviceType.HUB_LED]: HubLED,\n            [Consts.DeviceType.DUPLO_TRAIN_BASE_COLOR_SENSOR]: DuploTrainBaseColorSensor,\n            [Consts.DeviceType.DUPLO_TRAIN_BASE_MOTOR]: DuploTrainBaseMotor,\n            [Consts.DeviceType.DUPLO_TRAIN_BASE_SPEAKER]: DuploTrainBaseSpeaker,\n            [Consts.DeviceType.DUPLO_TRAIN_BASE_SPEEDOMETER]: DuploTrainBaseSpeedometer,\n            [Consts.DeviceType.MARIO_ACCELEROMETER]: MarioAccelerometer,\n            [Consts.DeviceType.MARIO_BARCODE_SENSOR]: MarioBarcodeSensor,\n            [Consts.DeviceType.MARIO_PANTS_SENSOR]: MarioPantsSensor,\n        };\n\n        constructor = deviceConstructors[deviceType as Consts.DeviceType];\n\n        if (constructor) {\n            return new constructor(this, portId, undefined, deviceType);\n        } else {\n            return new Device(this, portId, undefined, deviceType);\n        }\n\n    }\n\n\n    protected _getDeviceByPortId (portId: number) {\n        return this._attachedDevices[portId];\n    }\n\n\n}\n","import { Peripheral } from \"@abandonware/noble\";\n\nimport { LPF2Hub } from \"./lpf2hub\";\n\nimport * as Consts from \"../consts\";\n\nimport Debug = require(\"debug\");\nimport { IBLEAbstraction } from \"../interfaces\";\nconst debug = Debug(\"duplotrainbase\");\n\n\n/**\n * The DuploTrainBase is emitted if the discovered device is a Duplo Train Base.\n * @class DuploTrainBase\n * @extends LPF2Hub\n * @extends BaseHub\n */\nexport class DuploTrainBase extends LPF2Hub {\n\n\n    public static IsDuploTrainBase (peripheral: Peripheral) {\n        return (\n            peripheral.advertisement &&\n            peripheral.advertisement.serviceUuids &&\n            peripheral.advertisement.serviceUuids.indexOf(Consts.BLEService.LPF2_HUB.replace(/-/g, \"\")) >= 0 &&\n            peripheral.advertisement.manufacturerData &&\n            peripheral.advertisement.manufacturerData.length > 3 &&\n            peripheral.advertisement.manufacturerData[3] === Consts.BLEManufacturerData.DUPLO_TRAIN_BASE_ID\n        );\n    }\n\n\n    constructor (device: IBLEAbstraction) {\n        super(device, PortMap, Consts.HubType.DUPLO_TRAIN_BASE);\n        debug(\"Discovered Duplo Train Base\");\n    }\n\n\n    public async connect () {\n        debug(\"Connecting to Duplo Train Base\");\n        await super.connect();\n        debug(\"Connect completed\");\n    }\n\n\n}\n\nexport const PortMap: {[portName: string]: number} = {\n    \"MOTOR\": 0,\n    \"COLOR\": 18,\n    \"SPEEDOMETER\": 19\n};\n\n","import { Peripheral } from \"@abandonware/noble\";\nimport compareVersion from \"compare-versions\";\n\nimport { IBLEAbstraction } from \"../interfaces\";\n\nimport { LPF2Hub } from \"./lpf2hub\";\n\nimport * as Consts from \"../consts\";\n\nimport Debug = require(\"debug\");\nconst debug = Debug(\"hub\");\n\n\n/**\n * The Hub is emitted if the discovered device is a Hub.\n * @class Hub\n * @extends LPF2Hub\n * @extends BaseHub\n */\nexport class Hub extends LPF2Hub {\n\n\n    public static IsHub (peripheral: Peripheral) {\n        return (\n            peripheral.advertisement &&\n            peripheral.advertisement.serviceUuids &&\n            peripheral.advertisement.serviceUuids.indexOf(Consts.BLEService.LPF2_HUB.replace(/-/g, \"\")) >= 0 &&\n            peripheral.advertisement.manufacturerData &&\n            peripheral.advertisement.manufacturerData.length > 3 &&\n            peripheral.advertisement.manufacturerData[3] === Consts.BLEManufacturerData.HUB_ID\n        );\n    }\n\n    protected _currentPort = 0x3b;\n\n    constructor (device: IBLEAbstraction) {\n        super(device, PortMap, Consts.HubType.HUB);\n        debug(\"Discovered Powered UP Hub\");\n    }\n\n\n    public async connect () {\n        debug(\"Connecting to Powered UP Hub\");\n        await super.connect();\n        debug(\"Connect completed\");\n    }\n\n\n    protected _checkFirmware (version: string) {\n        if (compareVersion(\"1.1.00.0004\", version) === 1) {\n            throw new Error(`Your Powered Up Hub's (${this.name}) firmware is out of date and unsupported by this library. Please update it via the official Powered Up app.`);\n        }\n    }\n\n\n}\n\nexport const PortMap: {[portName: string]: number} = {\n    \"A\": 0,\n    \"B\": 1,\n    \"HUB_LED\": 50,\n    \"CURRENT_SENSOR\": 59,\n    \"VOLTAGE_SENSOR\": 60\n};\n","import { BaseHub } from \"./basehub\";\n\nimport * as Consts from \"../consts\";\n\nimport { decodeMACAddress, decodeVersion, toBin, toHex } from \"../utils\";\n\nimport Debug = require(\"debug\");\nconst debug = Debug(\"lpf2hub\");\nconst modeInfoDebug = Debug(\"lpf2hubmodeinfo\");\n\n\n/**\n * @class LPF2Hub\n * @extends BaseHub\n */\nexport class LPF2Hub extends BaseHub {\n\n    private _messageBuffer: Buffer = Buffer.alloc(0);\n\n    private _propertyRequestCallbacks: {[property: number]: ((data: Buffer) => void)} = {};\n\n\n    public async connect () {\n        debug(\"LPF2Hub connecting\");\n        await super.connect();\n        await this._bleDevice.discoverCharacteristicsForService(Consts.BLEService.LPF2_HUB);\n        this._bleDevice.subscribeToCharacteristic(Consts.BLECharacteristic.LPF2_ALL, this._parseMessage.bind(this));\n        await this._requestHubPropertyReports(Consts.HubPropertyPayload.BUTTON_STATE);\n        await this._requestHubPropertyValue(Consts.HubPropertyPayload.FW_VERSION);\n        await this._requestHubPropertyValue(Consts.HubPropertyPayload.HW_VERSION);\n        await this._requestHubPropertyReports(Consts.HubPropertyPayload.RSSI);\n        await this._requestHubPropertyReports(Consts.HubPropertyPayload.BATTERY_VOLTAGE);\n        await this._requestHubPropertyValue(Consts.HubPropertyPayload.PRIMARY_MAC_ADDRESS);\n        this.emit(\"connect\");\n        debug(\"LPF2Hub connected\");\n    }\n\n\n    /**\n     * Shutdown the Hub.\n     * @method LPF2Hub#shutdown\n     * @returns {Promise} Resolved upon successful disconnect.\n     */\n    public shutdown () {\n        return this.send(Buffer.from([0x02, 0x01]), Consts.BLECharacteristic.LPF2_ALL);\n    }\n\n\n    /**\n     * Set the name of the Hub.\n     * @method LPF2Hub#setName\n     * @param {string} name New name of the hub (14 characters or less, ASCII only).\n     * @returns {Promise} Resolved upon successful issuance of command.\n     */\n    public async setName (name: string) {\n        if (name.length > 14) {\n            throw new Error(\"Name must be 14 characters or less\");\n        }\n        let data = Buffer.from([0x01, 0x01, 0x01]);\n        data = Buffer.concat([data, Buffer.from(name, \"ascii\")]);\n        // Send this twice, as sometimes the first time doesn't take\n        await this.send(data, Consts.BLECharacteristic.LPF2_ALL);\n        await this.send(data, Consts.BLECharacteristic.LPF2_ALL);\n        this._name = name;\n    }\n\n\n    public send (message: Buffer, uuid: string) {\n        message = Buffer.concat([Buffer.alloc(2), message]);\n        message[0] = message.length;\n        debug(\"Sent Message (LPF2_ALL)\", message);\n        return this._bleDevice.writeToCharacteristic(uuid, message);\n    }\n\n\n    public subscribe (portId: number, deviceType: number, mode: number) {\n        return this.send(Buffer.from([0x41, portId, mode, 0x01, 0x00, 0x00, 0x00, 0x01]), Consts.BLECharacteristic.LPF2_ALL);\n    }\n\n\n    public unsubscribe (portId: number, mode: number) {\n        return this.send(Buffer.from([0x41, portId, mode, 0x01, 0x00, 0x00, 0x00, 0x00]), Consts.BLECharacteristic.LPF2_ALL);\n    }\n\n\n    /**\n     * Combines two ports with into a single virtual port.\n     *\n     * Note: The devices attached to the ports must be of the same device type.\n     * @method LPF2Hub#createVirtualPort\n     * @param {string} firstPortName First port name\n     * @param {string} secondPortName Second port name\n     * @returns {Promise} Resolved upon successful issuance of command.\n     */\n    public createVirtualPort (firstPortName: string, secondPortName: string) {\n        const firstDevice = this.getDeviceAtPort(firstPortName);\n        if (!firstDevice) {\n            throw new Error(`Port ${firstPortName} does not have an attached device`);\n        }\n        const secondDevice = this.getDeviceAtPort(secondPortName);\n        if (!secondDevice) {\n            throw new Error(`Port ${secondPortName} does not have an attached device`);\n        }\n        if (firstDevice.type !== secondDevice.type) {\n            throw new Error(`Both devices must be of the same type to create a virtual port`);\n        }\n        return this.send(Buffer.from([0x61, 0x01, firstDevice.portId, secondDevice.portId]), Consts.BLECharacteristic.LPF2_ALL);\n    }\n\n\n    protected _checkFirmware (version: string) {\n        return;\n    }\n\n\n    private _parseMessage (data?: Buffer) {\n\n        if (data) {\n            this._messageBuffer = Buffer.concat([this._messageBuffer, data]);\n        }\n\n        if (this._messageBuffer.length <= 0) {\n            return;\n        }\n\n        const len = this._messageBuffer[0];\n        if (len <= this._messageBuffer.length) {\n\n            const message = this._messageBuffer.slice(0, len);\n            this._messageBuffer = this._messageBuffer.slice(len);\n\n            debug(\"Received Message (LPF2_ALL)\", message);\n\n            switch (message[2]) {\n                case Consts.MessageType.HUB_PROPERTIES: {\n                    const property = message[3];\n                    const callback = this._propertyRequestCallbacks[property];\n                    if (callback) {\n                        callback(message);\n                    } else {\n                        this._parseHubPropertyResponse(message);\n                    }\n                    delete this._propertyRequestCallbacks[property];\n                    break;\n                }\n                case Consts.MessageType.HUB_ATTACHED_IO: {\n                    this._parsePortMessage(message);\n                    break;\n                }\n                case Consts.MessageType.PORT_INFORMATION: {\n                    this._parsePortInformationResponse(message);\n                    break;\n                }\n                case Consts.MessageType.PORT_MODE_INFORMATION: {\n                    this._parseModeInformationResponse(message);\n                    break;\n                }\n                case Consts.MessageType.PORT_VALUE_SINGLE: {\n                    this._parseSensorMessage(message);\n                    break;\n                }\n                case Consts.MessageType.PORT_OUTPUT_COMMAND_FEEDBACK: {\n                    this._parsePortAction(message);\n                    break;\n                }\n            }\n\n            if (this._messageBuffer.length > 0) {\n                this._parseMessage();\n            }\n\n        }\n    }\n\n\n    private _requestHubPropertyValue (property: number) {\n        return new Promise<void>((resolve) => {\n            this._propertyRequestCallbacks[property] = (message) => {\n                this._parseHubPropertyResponse(message);\n                return resolve();\n            };\n            this.send(Buffer.from([0x01, property, 0x05]), Consts.BLECharacteristic.LPF2_ALL);\n        });\n    }\n\n\n    private _requestHubPropertyReports (property: number) {\n        return this.send(Buffer.from([0x01, property, 0x02]), Consts.BLECharacteristic.LPF2_ALL);\n    }\n\n\n    private _parseHubPropertyResponse (message: Buffer) {\n        if (message[3] === Consts.HubPropertyPayload.BUTTON_STATE) {\n            if (message[5] === 1) {\n                /**\n                 * Emits when a button is pressed.\n                 * @event LPF2Hub#button\n                 * @param {string} button\n                 * @param {ButtonState} state\n                 */\n                this.emit(\"button\", { event: Consts.ButtonState.PRESSED });\n                return;\n            } else if (message[5] === 0) {\n                this.emit(\"button\", { event: Consts.ButtonState.RELEASED });\n                return;\n            }\n\n        } else if (message[3] === Consts.HubPropertyPayload.FW_VERSION) {\n            this._firmwareVersion = decodeVersion(message.readInt32LE(5));\n            this._checkFirmware(this._firmwareVersion);\n\n        } else if (message[3] === Consts.HubPropertyPayload.HW_VERSION) {\n            this._hardwareVersion = decodeVersion(message.readInt32LE(5));\n\n        } else if (message[3] === Consts.HubPropertyPayload.RSSI) {\n            const rssi = message.readInt8(5);\n            if (rssi !== 0) {\n                this._rssi = rssi;\n                this.emit(\"rssi\", { rssi: this._rssi });\n            }\n\n        } else if (message[3] === Consts.HubPropertyPayload.PRIMARY_MAC_ADDRESS) {\n            this._primaryMACAddress = decodeMACAddress(message.slice(5));\n\n        } else if (message[3] === Consts.HubPropertyPayload.BATTERY_VOLTAGE) {\n            const batteryLevel = message[5];\n            if (batteryLevel !== this._batteryLevel) {\n                this._batteryLevel = batteryLevel;\n                this.emit(\"batteryLevel\", { batteryLevel });\n            }\n        }\n\n    }\n\n    private async _parsePortMessage (message: Buffer) {\n\n        const portId = message[3];\n        const event = message[4];\n        const deviceType = event ? message.readUInt16LE(5) : 0;\n\n        if (event === Consts.AlertPayload.ATTACHED_IO) {\n\n            if (modeInfoDebug.enabled) {\n                const deviceTypeName = Consts.DeviceTypeNames[message[5]] || \"Unknown\";\n                modeInfoDebug(`Port ${toHex(portId)}, type ${toHex(deviceType, 4)} (${deviceTypeName})`);\n                const hwVersion = decodeVersion(message.readInt32LE(7));\n                const swVersion = decodeVersion(message.readInt32LE(11));\n                modeInfoDebug(`Port ${toHex(portId)}, hardware version ${hwVersion}, software version ${swVersion}`);\n                await this._sendPortInformationRequest(portId);\n            }\n\n            const device = this._createDevice(deviceType, portId);\n            this._attachDevice(device);\n\n        } else if (event === Consts.AlertPayload.DETACHED_IO) {\n            const device = this._getDeviceByPortId(portId);\n            if (device) {\n                this._detachDevice(device);\n                if (this.isPortVirtual(portId)) {\n                    const portName = this.getPortNameForPortId(portId);\n                    if (portName) {\n                        delete this._portMap[portName];\n                    }\n                    this._virtualPorts = this._virtualPorts.filter((virtualPortId) => virtualPortId !== portId);\n                }\n            }\n\n        } else if (event === Consts.AlertPayload.ATTACHED_VIRTUAL_IO) {\n            const firstPortName = this.getPortNameForPortId(message[7]);\n            const secondPortName = this.getPortNameForPortId(message[8]);\n            // @ts-ignore NK These should never be undefined\n            const virtualPortName = firstPortName + secondPortName;\n            const virtualPortId = message[3];\n            this._portMap[virtualPortName] = virtualPortId;\n            this._virtualPorts.push(virtualPortId);\n            const device = this._createDevice(deviceType, virtualPortId);\n            this._attachDevice(device);\n        }\n\n    }\n\n\n    private async _sendPortInformationRequest (port: number) {\n        await this.send(Buffer.from([0x21, port, 0x01]), Consts.BLECharacteristic.LPF2_ALL);\n        await this.send(Buffer.from([0x21, port, 0x02]), Consts.BLECharacteristic.LPF2_ALL); // Mode combinations\n    }\n\n\n    private async _parsePortInformationResponse (message: Buffer) {\n        const port = message[3];\n        if (message[4] === 2) {\n            const modeCombinationMasks: number[] = [];\n            for (let i = 5; i < message.length; i += 2) {\n                modeCombinationMasks.push(message.readUInt16LE(i));\n            }\n            modeInfoDebug(`Port ${toHex(port)}, mode combinations [${modeCombinationMasks.map((c) => toBin(c, 0)).join(\", \")}]`);\n            return;\n        }\n        const count = message[6];\n        const input = toBin(message.readUInt16LE(7), count);\n        const output = toBin(message.readUInt16LE(9), count);\n        modeInfoDebug(`Port ${toHex(port)}, total modes ${count}, input modes ${input}, output modes ${output}`);\n\n        for (let i = 0; i < count; i++) {\n            await this._sendModeInformationRequest(port, i, Consts.ModeInformationType.NAME);\n            await this._sendModeInformationRequest(port, i, Consts.ModeInformationType.RAW);\n            await this._sendModeInformationRequest(port, i, Consts.ModeInformationType.PCT);\n            await this._sendModeInformationRequest(port, i, Consts.ModeInformationType.SI);\n            await this._sendModeInformationRequest(port, i, Consts.ModeInformationType.SYMBOL);\n            await this._sendModeInformationRequest(port, i, Consts.ModeInformationType.VALUE_FORMAT);\n        }\n    }\n\n\n    private _sendModeInformationRequest (port: number, mode: number, type: number) {\n        return this.send(Buffer.from([0x22, port, mode, type]), Consts.BLECharacteristic.LPF2_ALL);\n    }\n\n\n    private _parseModeInformationResponse (message: Buffer) {\n        const port = toHex(message[3]);\n        const mode = message[4];\n        const type = message[5];\n        switch (type) {\n            case Consts.ModeInformationType.NAME:\n                modeInfoDebug(`Port ${port}, mode ${mode}, name ${message.slice(6, message.length).toString()}`);\n                break;\n            case Consts.ModeInformationType.RAW:\n                modeInfoDebug(`Port ${port}, mode ${mode}, RAW min ${message.readFloatLE(6)}, max ${message.readFloatLE(10)}`);\n                break;\n            case Consts.ModeInformationType.PCT:\n                modeInfoDebug(`Port ${port}, mode ${mode}, PCT min ${message.readFloatLE(6)}, max ${message.readFloatLE(10)}`);\n                break;\n            case Consts.ModeInformationType.SI:\n                modeInfoDebug(`Port ${port}, mode ${mode}, SI min ${message.readFloatLE(6)}, max ${message.readFloatLE(10)}`);\n                break;\n            case Consts.ModeInformationType.SYMBOL:\n                modeInfoDebug(`Port ${port}, mode ${mode}, SI symbol ${message.slice(6, message.length).toString()}`);\n                break;\n            case Consts.ModeInformationType.VALUE_FORMAT:\n                const numValues = message[6];\n                const dataType = [\"8bit\", \"16bit\", \"32bit\", \"float\"][message[7]];\n                const totalFigures = message[8];\n                const decimals = message[9];\n                modeInfoDebug(`Port ${port}, mode ${mode}, Value ${numValues} x ${dataType}, Decimal format ${totalFigures}.${decimals}`);\n        }\n    }\n\n\n    private _parsePortAction (message: Buffer) {\n\n        const portId = message[3];\n        const device = this._getDeviceByPortId(portId);\n\n        if (device) {\n            const finished = (message[4] === 0x0a);\n            if (finished) {\n                device.finish();\n            }\n        }\n\n    }\n\n\n    private _parseSensorMessage (message: Buffer) {\n\n        const portId = message[3];\n        const device = this._getDeviceByPortId(portId);\n\n        if (device) {\n            device.receive(message);\n        }\n\n    }\n\n\n}\n","import { Peripheral } from \"@abandonware/noble\";\nimport compareVersion from \"compare-versions\";\n\nimport { IBLEAbstraction } from \"../interfaces\";\n\nimport { LPF2Hub } from \"./lpf2hub\";\n\nimport * as Consts from \"../consts\";\n\nimport Debug = require(\"debug\");\nconst debug = Debug(\"movehub\");\n\n\n/**\n * Mario is emitted if the discovered device is a LEGO Super Mario brick.\n * @class Mario\n * @extends LPF2Hub\n * @extends BaseHub\n */\nexport class Mario extends LPF2Hub {\n\n\n    public static IsMario (peripheral: Peripheral) {\n        return (\n            peripheral.advertisement &&\n            peripheral.advertisement.serviceUuids &&\n            peripheral.advertisement.serviceUuids.indexOf(Consts.BLEService.LPF2_HUB.replace(/-/g, \"\")) >= 0 &&\n            peripheral.advertisement.manufacturerData &&\n            peripheral.advertisement.manufacturerData.length > 3 &&\n            peripheral.advertisement.manufacturerData[3] === Consts.BLEManufacturerData.MARIO_ID\n        );\n    }\n\n    constructor (device: IBLEAbstraction) {\n        super(device, PortMap, Consts.HubType.MOVE_HUB);\n        debug(\"Discovered Mario\");\n    }\n\n\n    public async connect () {\n        debug(\"Connecting to Mario\");\n        await super.connect();\n        debug(\"Connect completed\");\n    }\n\n\n}\n\nexport const PortMap: {[portName: string]: number} = {\n};\n","import { Peripheral } from \"@abandonware/noble\";\nimport compareVersion from \"compare-versions\";\n\nimport { IBLEAbstraction } from \"../interfaces\";\n\nimport { LPF2Hub } from \"./lpf2hub\";\n\nimport * as Consts from \"../consts\";\n\nimport Debug = require(\"debug\");\nconst debug = Debug(\"movehub\");\n\n\n/**\n * The MoveHub is emitted if the discovered device is a Move Hub.\n * @class MoveHub\n * @extends LPF2Hub\n * @extends BaseHub\n */\nexport class MoveHub extends LPF2Hub {\n\n\n    public static IsMoveHub (peripheral: Peripheral) {\n        return (\n            peripheral.advertisement &&\n            peripheral.advertisement.serviceUuids &&\n            peripheral.advertisement.serviceUuids.indexOf(Consts.BLEService.LPF2_HUB.replace(/-/g, \"\")) >= 0 &&\n            peripheral.advertisement.manufacturerData &&\n            peripheral.advertisement.manufacturerData.length > 3 &&\n            peripheral.advertisement.manufacturerData[3] === Consts.BLEManufacturerData.MOVE_HUB_ID\n        );\n    }\n\n    constructor (device: IBLEAbstraction) {\n        super(device, PortMap, Consts.HubType.MOVE_HUB);\n        debug(\"Discovered Move Hub\");\n    }\n\n\n    public async connect () {\n        debug(\"Connecting to Move Hub\");\n        await super.connect();\n        debug(\"Connect completed\");\n    }\n\n\n    protected _checkFirmware (version: string) {\n        if (compareVersion(\"2.0.00.0017\", version) === 1) {\n            throw new Error(`Your Move Hub's (${this.name}) firmware is out of date and unsupported by this library. Please update it via the official Powered Up app.`);\n        }\n    }\n\n\n}\n\nexport const PortMap: {[portName: string]: number} = {\n    \"A\": 0,\n    \"B\": 1,\n    \"C\": 2,\n    \"D\": 3,\n    \"HUB_LED\": 50,\n    \"TILT_SENSOR\": 58,\n    \"CURRENT_SENSOR\": 59,\n    \"VOLTAGE_SENSOR\": 60\n};\n","import { Peripheral } from \"@abandonware/noble\";\n\nimport { IBLEAbstraction } from \"../interfaces\";\n\nimport { LPF2Hub } from \"./lpf2hub\";\n\nimport * as Consts from \"../consts\";\n\nimport Debug = require(\"debug\");\nconst debug = Debug(\"remotecontrol\");\n\n\n/**\n * The RemoteControl is emitted if the discovered device is a Remote Control.\n * @class RemoteControl\n * @extends LPF2Hub\n * @extends BaseHub\n */\nexport class RemoteControl extends LPF2Hub {\n\n\n    public static IsRemoteControl (peripheral: Peripheral) {\n        return (\n            peripheral.advertisement &&\n            peripheral.advertisement.serviceUuids &&\n            peripheral.advertisement.serviceUuids.indexOf(Consts.BLEService.LPF2_HUB.replace(/-/g, \"\")) >= 0 &&\n            peripheral.advertisement.manufacturerData &&\n            peripheral.advertisement.manufacturerData.length > 3 &&\n            peripheral.advertisement.manufacturerData[3] === Consts.BLEManufacturerData.REMOTE_CONTROL_ID\n        );\n    }\n\n\n    constructor (device: IBLEAbstraction) {\n        super(device, PortMap, Consts.HubType.REMOTE_CONTROL);\n        debug(\"Discovered Powered UP Remote\");\n    }\n\n\n    public async connect () {\n        debug(\"Connecting to Powered UP Remote\");\n        await super.connect();\n        debug(\"Connect completed\");\n    }\n\n\n}\n\nexport const PortMap: {[portName: string]: number} = {\n    \"LEFT\": 0,\n    \"RIGHT\": 1,\n    \"HUB_LED\": 52,\n    \"VOLTAGE_SENSOR\": 59,\n    \"REMOTE_CONTROL_RSSI\": 60\n};\n","import { Peripheral } from \"@abandonware/noble\";\n\nimport { IBLEAbstraction } from \"../interfaces\";\n\nimport { LPF2Hub } from \"./lpf2hub\";\n\nimport * as Consts from \"../consts\";\n\nimport Debug = require(\"debug\");\nconst debug = Debug(\"technicmediumhub\");\n\n\n/**\n * The TechnicMediumHub is emitted if the discovered device is a Technic Medium Hub.\n * @class TechnicMediumHub\n * @extends LPF2Hub\n * @extends BaseHub\n */\nexport class TechnicMediumHub extends LPF2Hub {\n\n\n    public static IsTechnicMediumHub (peripheral: Peripheral) {\n        return (\n            peripheral.advertisement &&\n            peripheral.advertisement.serviceUuids &&\n            peripheral.advertisement.serviceUuids.indexOf(Consts.BLEService.LPF2_HUB.replace(/-/g, \"\")) >= 0 &&\n            peripheral.advertisement.manufacturerData &&\n            peripheral.advertisement.manufacturerData.length > 3 &&\n            peripheral.advertisement.manufacturerData[3] === Consts.BLEManufacturerData.TECHNIC_MEDIUM_HUB\n        );\n    }\n\n    constructor (device: IBLEAbstraction) {\n        super(device, PortMap, Consts.HubType.TECHNIC_MEDIUM_HUB);\n        debug(\"Discovered Control+ Hub\");\n    }\n\n\n    public async connect () {\n        debug(\"Connecting to Control+ Hub\");\n        await super.connect();\n        debug(\"Connect completed\");\n    }\n\n\n}\n\nexport const PortMap: {[portName: string]: number} = {\n    \"A\": 0,\n    \"B\": 1,\n    \"C\": 2,\n    \"D\": 3,\n    \"HUB_LED\": 50,\n    \"CURRENT_SENSOR\": 59,\n    \"VOLTAGE_SENSOR\": 60,\n    \"ACCELEROMETER\": 97,\n    \"GYRO_SENSOR\": 98,\n    \"TILT_SENSOR\": 99\n};\n","import { Peripheral } from \"@abandonware/noble\";\n\nimport { IBLEAbstraction } from \"../interfaces\";\n\nimport { BaseHub } from \"./basehub\";\n\nimport * as Consts from \"../consts\";\n\nimport { isWebBluetooth } from \"../utils\";\n\nimport Debug = require(\"debug\");\nimport { HubLED } from \"../devices/hubled\";\nconst debug = Debug(\"wedo2smarthub\");\n\n\n/**\n * The WeDo2SmartHub is emitted if the discovered device is a WeDo 2.0 Smart Hub.\n * @class WeDo2SmartHub\n * @extends BaseHub\n */\nexport class WeDo2SmartHub extends BaseHub {\n\n\n    public static IsWeDo2SmartHub (peripheral: Peripheral) {\n        return (\n            peripheral.advertisement &&\n            peripheral.advertisement.serviceUuids &&\n            peripheral.advertisement.serviceUuids.indexOf(Consts.BLEService.WEDO2_SMART_HUB.replace(/-/g, \"\")) >= 0\n        );\n    }\n\n\n    private _lastTiltX: number = 0;\n    private _lastTiltY: number = 0;\n\n\n    constructor (device: IBLEAbstraction) {\n        super(device, PortMap, Consts.HubType.WEDO2_SMART_HUB);\n        debug(\"Discovered WeDo 2.0 Smart Hub\");\n    }\n\n\n    public connect () {\n        return new Promise<void>(async (resolve) => {\n            debug(\"Connecting to WeDo 2.0 Smart Hub\");\n            await super.connect();\n            await this._bleDevice.discoverCharacteristicsForService(Consts.BLEService.WEDO2_SMART_HUB);\n            await this._bleDevice.discoverCharacteristicsForService(Consts.BLEService.WEDO2_SMART_HUB_2);\n            if (!isWebBluetooth) {\n                await this._bleDevice.discoverCharacteristicsForService(Consts.BLEService.WEDO2_SMART_HUB_3);\n                await this._bleDevice.discoverCharacteristicsForService(Consts.BLEService.WEDO2_SMART_HUB_4);\n                await this._bleDevice.discoverCharacteristicsForService(Consts.BLEService.WEDO2_SMART_HUB_5);\n            } else {\n                await this._bleDevice.discoverCharacteristicsForService(\"battery_service\");\n                await this._bleDevice.discoverCharacteristicsForService(\"device_information\");\n            }\n            debug(\"Connect completed\");\n            this.emit(\"connect\");\n            resolve();\n            this._bleDevice.subscribeToCharacteristic(Consts.BLECharacteristic.WEDO2_PORT_TYPE, this._parsePortMessage.bind(this));\n            this._bleDevice.subscribeToCharacteristic(Consts.BLECharacteristic.WEDO2_SENSOR_VALUE, this._parseSensorMessage.bind(this));\n            this._bleDevice.subscribeToCharacteristic(Consts.BLECharacteristic.WEDO2_BUTTON, this._parseSensorMessage.bind(this));\n            if (!isWebBluetooth) {\n                this._bleDevice.subscribeToCharacteristic(Consts.BLECharacteristic.WEDO2_BATTERY, this._parseBatteryMessage.bind(this));\n                this._bleDevice.readFromCharacteristic(Consts.BLECharacteristic.WEDO2_BATTERY, (err, data) => {\n                    if (data) {\n                        this._parseBatteryMessage(data);\n                    }\n                });\n            } else {\n                this._bleDevice.readFromCharacteristic(\"00002a19-0000-1000-8000-00805f9b34fb\", (err, data) => {\n                    if (data) {\n                        this._parseBatteryMessage(data);\n                    }\n                });\n                this._bleDevice.subscribeToCharacteristic(\"00002a19-0000-1000-8000-00805f9b34fb\", this._parseHighCurrentAlert.bind(this));\n            }\n            this._bleDevice.subscribeToCharacteristic(Consts.BLECharacteristic.WEDO2_HIGH_CURRENT_ALERT, this._parseHighCurrentAlert.bind(this));\n            if (!isWebBluetooth) {\n                this._bleDevice.readFromCharacteristic(Consts.BLECharacteristic.WEDO2_FIRMWARE_REVISION, (err, data) => {\n                    if (data) {\n                        this._parseFirmwareRevisionString(data);\n                    }\n                });\n            } else {\n                this._bleDevice.readFromCharacteristic(\"00002a26-0000-1000-8000-00805f9b34fb\", (err, data) => {\n                    if (data) {\n                        this._parseFirmwareRevisionString(data);\n                    }\n                });\n            }\n        });\n    }\n\n\n    /**\n     * Shutdown the Hub.\n     * @method WeDo2SmartHub#shutdown\n     * @returns {Promise} Resolved upon successful disconnect.\n     */\n    public shutdown () {\n        return this.send(Buffer.from([0x00]), Consts.BLECharacteristic.WEDO2_DISCONNECT);\n    }\n\n\n    /**\n     * Set the name of the Hub.\n     * @method WeDo2SmartHub#setName\n     * @param {string} name New name of the hub (14 characters or less, ASCII only).\n     * @returns {Promise} Resolved upon successful issuance of command.\n     */\n    public setName (name: string) {\n        if (name.length > 14) {\n            throw new Error(\"Name must be 14 characters or less\");\n        }\n        return new Promise<void>((resolve) => {\n            const data = Buffer.from(name, \"ascii\");\n            // Send this twice, as sometimes the first time doesn't take\n            this.send(data, Consts.BLECharacteristic.WEDO2_NAME_ID);\n            this.send(data, Consts.BLECharacteristic.WEDO2_NAME_ID);\n            this._name = name;\n            return resolve();\n        });\n    }\n\n\n    public send (message: Buffer, uuid: string) {\n        if (debug.enabled) {\n            debug(`Sent Message (${this._getCharacteristicNameFromUUID(uuid)})`, message);\n        }\n        return this._bleDevice.writeToCharacteristic(uuid, message);\n    }\n\n\n    public subscribe (portId: number, deviceType: number, mode: number) {\n        this.send(Buffer.from([0x01, 0x02, portId, deviceType, mode, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01]), Consts.BLECharacteristic.WEDO2_PORT_TYPE_WRITE);\n    }\n\n\n    public unsubscribe (portId: number, deviceType: number, mode: number) {\n        this.send(Buffer.from([0x01, 0x02, portId, deviceType, mode, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00]), Consts.BLECharacteristic.WEDO2_PORT_TYPE_WRITE);\n    }\n\n\n    private _getCharacteristicNameFromUUID (uuid: string) {\n        const keys = Object.keys(Consts.BLECharacteristic);\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            if (Consts.BLECharacteristic[key as keyof typeof Consts.BLECharacteristic] === uuid) {\n                return key;\n            }\n        }\n        return \"UNKNOWN\";\n    }\n\n\n    private _parseHighCurrentAlert (data: Buffer) {\n        debug(\"Received Message (WEDO2_HIGH_CURRENT_ALERT)\", data);\n    }\n\n\n    private _parseBatteryMessage (data: Buffer) {\n        debug(\"Received Message (WEDO2_BATTERY)\", data);\n        const batteryLevel = data[0];\n        if (batteryLevel !== this._batteryLevel) {\n            this._batteryLevel = batteryLevel;\n            this.emit(\"batteryLevel\", { batteryLevel });\n        }\n    }\n\n\n    private _parseFirmwareRevisionString (data: Buffer) {\n        debug(\"Received Message (WEDO2_FIRMWARE_REVISION)\", data);\n        this._firmwareVersion = data.toString();\n    }\n\n\n    private _parsePortMessage (data: Buffer) {\n        debug(\"Received Message (WEDO2_PORT_TYPE)\", data);\n\n        const portId = data[0];\n        const event = data[1];\n        const deviceType = event ? data[3] : 0;\n\n        if (event === 0x01) {\n            const device = this._createDevice(deviceType, portId);\n            this._attachDevice(device);\n        } else if (event === 0x00) {\n            const device = this._getDeviceByPortId(portId);\n            if (device) {\n                this._detachDevice(device);\n            }\n        }\n    }\n\n\n    private _parseSensorMessage (message: Buffer) {\n\n        debug(\"Received Message (WEDO2_SENSOR_VALUE)\", message);\n\n        if (message[0] === 0x01) {\n            /**\n             * Emits when a button is pressed.\n             * @event WeDo2SmartHub#button\n             * @param {string} button\n             * @param {ButtonState} state\n             */\n            this.emit(\"button\", { event: Consts.ButtonState.PRESSED });\n            return;\n        } else if (message[0] === 0x00) {\n            this.emit(\"button\", { event: Consts.ButtonState.RELEASED });\n            return;\n        }\n\n        const portId = message[1];\n        const device = this._getDeviceByPortId(portId);\n\n        if (device) {\n            device.receive(message);\n        }\n\n    }\n\n\n}\n\nexport const PortMap: {[portName: string]: number} = {\n    \"A\": 1,\n    \"B\": 2,\n    \"CURRENT_SENSOR\": 3,\n    \"VOLTAGE_SENSOR\": 4,\n    \"PIEZO_BUZZER\": 5,\n    \"HUB_LED\": 6\n};\n","import * as Consts from \"./consts\";\n\nimport { PoweredUP } from \"./poweredup-browser\";\n\nimport { BaseHub } from \"./hubs/basehub\";\nimport { DuploTrainBase } from \"./hubs/duplotrainbase\";\nimport { Hub } from \"./hubs/hub\";\nimport { Mario } from \"./hubs/mario\";\nimport { MoveHub } from \"./hubs/movehub\";\nimport { RemoteControl } from \"./hubs/remotecontrol\";\nimport { TechnicMediumHub } from \"./hubs/technicmediumhub\";\nimport { WeDo2SmartHub } from \"./hubs/wedo2smarthub\";\n\nimport { ColorDistanceSensor } from \"./devices/colordistancesensor\";\nimport { CurrentSensor } from \"./devices/currentsensor\";\nimport { Device } from \"./devices/device\";\nimport { DuploTrainBaseColorSensor } from \"./devices/duplotrainbasecolorsensor\";\nimport { DuploTrainBaseMotor } from \"./devices/duplotrainbasemotor\";\nimport { DuploTrainBaseSpeaker } from \"./devices/duplotrainbasespeaker\";\nimport { DuploTrainBaseSpeedometer } from \"./devices/duplotrainbasespeedometer\";\nimport { HubLED } from \"./devices/hubled\";\nimport { Light } from \"./devices/light\";\nimport { MediumLinearMotor } from \"./devices/mediumlinearmotor\";\nimport { MotionSensor } from \"./devices/motionsensor\";\nimport { MoveHubMediumLinearMotor } from \"./devices/movehubmediumlinearmotor\";\nimport { MoveHubTiltSensor } from \"./devices/movehubtiltsensor\";\nimport { PiezoBuzzer } from \"./devices/piezobuzzer\";\nimport { RemoteControlButton } from \"./devices/remotecontrolbutton\";\nimport { SimpleMediumLinearMotor } from \"./devices/simplemediumlinearmotor\";\nimport { TechnicColorSensor } from \"./devices/techniccolorsensor\";\nimport { TechnicDistanceSensor } from \"./devices/technicdistancesensor\";\nimport { TechnicForceSensor } from \"./devices/technicforcesensor\";\nimport { TechnicLargeAngularMotor } from \"./devices/techniclargeangularmotor\";\nimport { TechnicLargeLinearMotor } from \"./devices/techniclargelinearmotor\";\nimport { TechnicMediumAngularMotor } from \"./devices/technicmediumangularmotor\";\nimport { TechnicMediumHubAccelerometerSensor } from \"./devices/technicmediumhubaccelerometersensor\";\nimport { TechnicMediumHubGyroSensor } from \"./devices/technicmediumhubgyrosensor\";\nimport { TechnicMediumHubTiltSensor } from \"./devices/technicmediumhubtiltsensor\";\nimport { TechnicXLargeLinearMotor } from \"./devices/technicxlargelinearmotor\";\nimport { TiltSensor } from \"./devices/tiltsensor\";\nimport { TrainMotor } from \"./devices/trainmotor\";\nimport { VoltageSensor } from \"./devices/voltagesensor\";\nimport { TachoMotor } from \"./devices/tachomotor\";\nimport { AbsoluteMotor } from \"./devices/absolutemotor\";\nimport { BasicMotor } from \"./devices/basicmotor\";\n\nimport { isWebBluetooth } from \"./utils\";\n\n// @ts-ignore\nwindow.PoweredUP = {\n    PoweredUP,\n    BaseHub,\n    WeDo2SmartHub,\n    TechnicMediumHub,\n    Hub,\n    RemoteControl,\n    DuploTrainBase,\n    Consts,\n    ColorDistanceSensor,\n    Device,\n    DuploTrainBaseColorSensor,\n    DuploTrainBaseMotor,\n    DuploTrainBaseSpeaker,\n    DuploTrainBaseSpeedometer,\n    HubLED,\n    Light,\n    Mario,\n    MediumLinearMotor,\n    MotionSensor,\n    MoveHub,\n    MoveHubMediumLinearMotor,\n    MoveHubTiltSensor,\n    PiezoBuzzer,\n    RemoteControlButton,\n    SimpleMediumLinearMotor,\n    TechnicColorSensor,\n    TechnicDistanceSensor,\n    TechnicForceSensor,\n    TechnicMediumHubAccelerometerSensor,\n    TechnicMediumHubGyroSensor,\n    TechnicMediumHubTiltSensor,\n    TechnicMediumAngularMotor,\n    TechnicLargeAngularMotor,\n    TechnicLargeLinearMotor,\n    TechnicXLargeLinearMotor,\n    TiltSensor,\n    TrainMotor,\n    VoltageSensor,\n    CurrentSensor,\n    TachoMotor,\n    AbsoluteMotor,\n    BasicMotor,\n    isWebBluetooth\n};\n\n","import { WebBLEDevice } from \"./webbleabstraction\";\n\nimport { BaseHub } from \"./hubs/basehub\";\nimport { DuploTrainBase } from \"./hubs/duplotrainbase\";\nimport { Hub } from \"./hubs/hub\";\nimport { Mario } from \"./hubs/mario\";\nimport { MoveHub } from \"./hubs/movehub\";\nimport { RemoteControl } from \"./hubs/remotecontrol\";\nimport { TechnicMediumHub } from \"./hubs/technicmediumhub\";\nimport { WeDo2SmartHub } from \"./hubs/wedo2smarthub\";\n\nimport * as Consts from \"./consts\";\n\nimport { EventEmitter } from \"events\";\n\nimport Debug = require(\"debug\");\nimport { IBLEAbstraction } from \"./interfaces\";\nconst debug = Debug(\"poweredup\");\n\n\n/**\n * @class PoweredUP\n * @extends EventEmitter\n */\nexport class PoweredUP extends EventEmitter {\n\n\n    private _connectedHubs: {[uuid: string]: BaseHub} = {};\n\n\n    constructor () {\n        super();\n        this._discoveryEventHandler = this._discoveryEventHandler.bind(this);\n    }\n\n\n    /**\n     * Begin scanning for Powered UP Hub devices.\n     * @method PoweredUP#scan\n     */\n    public async scan () {\n\n        try {\n\n            const device = await navigator.bluetooth.requestDevice({\n                filters: [\n                    {\n                        services: [\n                            Consts.BLEService.WEDO2_SMART_HUB\n                        ]\n                    },\n                    {\n                        services: [\n                            Consts.BLEService.LPF2_HUB\n                        ]\n                    }\n                ],\n                optionalServices: [\n                    Consts.BLEService.WEDO2_SMART_HUB_2,\n                    \"battery_service\",\n                    \"device_information\"\n                ]\n            });\n\n            // @ts-ignore\n            const server = await device.gatt.connect();\n            this._discoveryEventHandler.call(this, server);\n            return true;\n\n        } catch (err) {\n            return false;\n        }\n\n    }\n\n\n    /**\n     * Retrieve a list of Powered UP Hubs.\n     * @method PoweredUP#getHubs\n     * @returns {BaseHub[]}\n     */\n    public getHubs () {\n        return Object.values(this._connectedHubs);\n    }\n\n\n    /**\n     * Retrieve a Powered UP Hub by UUID.\n     * @method PoweredUP#getHubByUUID\n     * @param {string} uuid\n     * @returns {BaseHub | null}\n     */\n    public getHubByUUID (uuid: string) {\n        return this._connectedHubs[uuid];\n    }\n\n\n    /**\n     * Retrieve a Powered UP Hub by primary MAC address.\n     * @method PoweredUP#getHubByPrimaryMACAddress\n     * @param {string} address\n     * @returns {BaseHub}\n     */\n    public getHubByPrimaryMACAddress (address: string) {\n        return Object.values(this._connectedHubs).filter((hub) => hub.primaryMACAddress === address)[0];\n    }\n\n\n    /**\n     * Retrieve a list of Powered UP Hub by name.\n     * @method PoweredUP#getHubsByName\n     * @param {string} name\n     * @returns {BaseHub[]}\n     */\n    public getHubsByName (name: string) {\n        return Object.values(this._connectedHubs).filter((hub) => hub.name === name);\n    }\n\n\n    /**\n     * Retrieve a list of Powered UP Hub by type.\n     * @method PoweredUP#getHubsByType\n     * @param {string} name\n     * @returns {BaseHub[]}\n     */\n    public getHubsByType (hubType: number) {\n        return Object.values(this._connectedHubs).filter((hub) => hub.type === hubType);\n    }\n\n\n    private _determineLPF2HubType (device: IBLEAbstraction): Promise<Consts.HubType> {\n        return new Promise((resolve) => {\n            let buf: Buffer = Buffer.alloc(0);\n            device.subscribeToCharacteristic(Consts.BLECharacteristic.LPF2_ALL, (data: Buffer) => {\n                buf = Buffer.concat([buf, data]);\n                while (buf[0] <= buf.length) {\n                    const len = buf[0];\n                    const message = buf.slice(0, len);\n                    buf = buf.slice(len);\n                    if (message[2] === 0x01 && message[3] === 0x0b) {\n                        switch (message[5]) {\n                            case Consts.BLEManufacturerData.REMOTE_CONTROL_ID:\n                                resolve(Consts.HubType.REMOTE_CONTROL);\n                                break;\n                            case Consts.BLEManufacturerData.MOVE_HUB_ID:\n                                resolve(Consts.HubType.MOVE_HUB);\n                                break;\n                            case Consts.BLEManufacturerData.HUB_ID:\n                                resolve(Consts.HubType.HUB);\n                                break;\n                            case Consts.BLEManufacturerData.DUPLO_TRAIN_BASE_ID:\n                                resolve(Consts.HubType.DUPLO_TRAIN_BASE);\n                                break;\n                            case Consts.BLEManufacturerData.TECHNIC_MEDIUM_HUB:\n                                resolve(Consts.HubType.TECHNIC_MEDIUM_HUB);\n                                break;\n                        }\n                        debug(\"Hub type determined\");\n                    } else {\n                        debug(\"Stashed in mailbox (LPF2_ALL)\", message);\n                        device.addToCharacteristicMailbox(Consts.BLECharacteristic.LPF2_ALL, message);\n                    }\n                }\n            });\n            device.writeToCharacteristic(Consts.BLECharacteristic.LPF2_ALL, Buffer.from([0x05, 0x00, 0x01, 0x0b, 0x05]));\n        });\n    }\n\n\n    private async _discoveryEventHandler (server: BluetoothRemoteGATTServer) {\n\n        const device = new WebBLEDevice(server);\n\n        let hub: BaseHub;\n\n        let hubType = Consts.HubType.UNKNOWN;\n        let isLPF2Hub = false;\n        try {\n            await device.discoverCharacteristicsForService(Consts.BLEService.WEDO2_SMART_HUB);\n            hubType = Consts.HubType.WEDO2_SMART_HUB;\n        // tslint:disable-next-line\n        } catch (error) {}\n        try {\n            if (hubType !== Consts.HubType.WEDO2_SMART_HUB) {\n                await device.discoverCharacteristicsForService(Consts.BLEService.LPF2_HUB);\n                isLPF2Hub = true;\n            }\n        // tslint:disable-next-line\n        } catch (error) {}\n\n        if (isLPF2Hub) {\n            hubType = await this._determineLPF2HubType(device);\n        }\n\n        switch (hubType) {\n            case Consts.HubType.WEDO2_SMART_HUB:\n                hub = new WeDo2SmartHub(device);\n                break;\n            case Consts.HubType.MOVE_HUB:\n                hub = new MoveHub(device);\n                break;\n            case Consts.HubType.HUB:\n                hub = new Hub(device);\n                break;\n            case Consts.HubType.REMOTE_CONTROL:\n                hub = new RemoteControl(device);\n                break;\n            case Consts.HubType.DUPLO_TRAIN_BASE:\n                hub = new DuploTrainBase(device);\n                break;\n            case Consts.HubType.TECHNIC_MEDIUM_HUB:\n                hub = new TechnicMediumHub(device);\n                break;\n            case Consts.HubType.MARIO:\n                hub = new Mario(device);\n                break;\n            default:\n                return;\n        }\n\n        device.on(\"discoverComplete\", () => {\n\n            hub.on(\"connect\", () => {\n                debug(`Hub ${hub.uuid} connected`);\n                this._connectedHubs[hub.uuid] = hub;\n            });\n\n            hub.on(\"disconnect\", () => {\n                debug(`Hub ${hub.uuid} disconnected`);\n                delete this._connectedHubs[hub.uuid];\n            });\n\n            debug(`Hub ${hub.uuid} discovered`);\n\n            /**\n             * Emits when a Powered UP Hub device is found.\n             * @event PoweredUP#discover\n             * @param {WeDo2SmartHub | MoveHub | TechnicMediumHub | RemoteControl | DuploTrainBase} hub\n             */\n            this.emit(\"discover\", hub);\n\n        });\n\n    }\n\n}\n","import { EventEmitter } from \"events\";\nimport { Device } from \"./devices/device\";\n\n// @ts-ignore\nexport const isWebBluetooth = !!(typeof navigator !== \"undefined\" && navigator && navigator.bluetooth);\n\nexport const toHex = (value: number, length: number = 2) => {\n    return value.toString(16).padStart(length, \"0\");\n};\n\nexport const toBin = (value: number, length: number = 8) => {\n    return value.toString(2).padStart(length, \"0\");\n};\n\nexport const mapSpeed = (speed: number) => {\n    if (speed === 127) {\n        return 127;\n    }\n    if (speed > 100) {\n        speed = 100;\n    } else if (speed < -100) {\n        speed = -100;\n    }\n    return speed;\n};\n\nexport const decodeVersion = (version: number) => {\n    const parts = version.toString(16).padStart(8, \"0\");\n    return [parts[0], parts[1], parts.substring(2, 4), parts.substring(4)].join(\".\");\n};\n\nexport const decodeMACAddress = (address: Uint8Array) => {\n    return Array.from(address).map((part) => toHex(part, 2)).join(\":\");\n};\n\nexport const normalizeAngle = (angle: number) => {\n    if (angle >= 180) {\n        return angle - (360 * ((angle + 180) / 360));\n    } else if (angle < -180) {\n        return angle + (360 * ((180 - angle) / 360));\n    }\n    return angle;\n};\n\nexport const roundAngleToNearest90 = (angle: number) => {\n    angle = normalizeAngle(angle);\n    if (angle < -135) {\n        return -180;\n    }\n    if (angle < -45) {\n        return -90;\n    }\n    if (angle < 45) {\n        return 0;\n    }\n    if (angle < 135) {\n        return 90;\n    }\n    return -180;\n};\n\nexport const calculateRamp = (device: Device, fromPower: number, toPower: number, time: number) => {\n    const emitter = new EventEmitter();\n    const steps = Math.abs(toPower - fromPower);\n    let delay = time / steps;\n    let increment = 1;\n    if (delay < 50 && steps > 0) {\n        increment = 50 / delay;\n        delay = 50;\n    }\n    if (fromPower > toPower) {\n        increment = -increment;\n    }\n    let i = 0;\n    const interval = setInterval(() => {\n        let power = Math.round(fromPower + (++i * increment));\n        if (toPower > fromPower && power > toPower) {\n            power = toPower;\n        } else if (fromPower > toPower && power < toPower) {\n            power = toPower;\n        }\n        emitter.emit(\"changePower\", power);\n        if (power === toPower) {\n            clearInterval(interval);\n            emitter.emit(\"finished\");\n        }\n    }, delay);\n    device.setEventTimer(interval);\n    return emitter;\n};\n","import Debug = require(\"debug\");\nimport { EventEmitter } from \"events\";\nimport { IBLEAbstraction } from \"./interfaces\";\nconst debug = Debug(\"bledevice\");\n\n\nexport class WebBLEDevice extends EventEmitter implements IBLEAbstraction {\n\n    private _webBLEServer: any;\n\n    private _uuid: string;\n    private _name: string = \"\";\n\n    private _listeners: {[uuid: string]: any} = {};\n    private _characteristics: {[uuid: string]: any} = {};\n\n    private _queue: Promise<void> = Promise.resolve();\n    private _mailbox: Buffer[] = [];\n\n    private _connected: boolean = false;\n    private _connecting: boolean = false;\n\n\n    constructor (device: any) {\n        super();\n        this._webBLEServer = device;\n        this._uuid = device.device.id;\n        this._name = device.device.name;\n        device.device.addEventListener(\"gattserverdisconnected\", () => {\n            this._connecting = false;\n            this._connected = false;\n            this.emit(\"disconnect\");\n        });\n        setTimeout(() => {\n            this.emit(\"discoverComplete\");\n        }, 2000);\n    }\n\n\n    public get uuid () {\n        return this._uuid;\n    }\n\n\n    public get name () {\n        return this._name;\n    }\n\n\n    public get connecting () {\n        return this._connecting;\n    }\n\n\n    public get connected () {\n        return this._connected;\n    }\n\n\n    public connect () {\n        return new Promise<void>((resolve) => {\n            this._connected = true;\n            return resolve();\n        });\n    }\n\n\n    public disconnect () {\n        return new Promise<void>((resolve) => {\n            this._webBLEServer.device.gatt.disconnect();\n            return resolve();\n        });\n    }\n\n\n    public async discoverCharacteristicsForService (uuid: string) {\n        debug(\"Service/characteristic discovery started\");\n        const service = await this._webBLEServer.getPrimaryService(uuid);\n        const characteristics = await service.getCharacteristics();\n        for (const characteristic of characteristics) {\n            this._characteristics[characteristic.uuid] = characteristic;\n        }\n        debug(\"Service/characteristic discovery finished\");\n    }\n\n\n    public subscribeToCharacteristic (uuid: string, callback: (data: Buffer) => void) {\n        if (this._listeners[uuid]) {\n            this._characteristics[uuid].removeEventListener(\"characteristicvaluechanged\", this._listeners[uuid]);\n        }\n        // @ts-ignore\n        this._listeners[uuid] = (event) => {\n            const buf = Buffer.alloc(event.target.value.buffer.byteLength);\n            const view = new Uint8Array(event.target.value.buffer);\n            for (let i = 0; i < buf.length; i++) {\n                buf[i] = view[i];\n            }\n            debug(\"Incoming data\", buf);\n            return callback(buf);\n        };\n        this._characteristics[uuid].addEventListener(\"characteristicvaluechanged\", this._listeners[uuid]);\n\n        const mailbox = Array.from(this._mailbox);\n        this._mailbox = [];\n        for (const data of mailbox) {\n            debug(\"Replayed from mailbox (LPF2_ALL)\", data);\n            callback(data);\n        }\n\n        this._characteristics[uuid].startNotifications();\n    }\n\n\n    public addToCharacteristicMailbox (uuid: string, data: Buffer) {\n        this._mailbox.push(data);\n    }\n\n\n    public readFromCharacteristic (uuid: string, callback: (err: string | null, data: Buffer | null) => void) {\n        // @ts-ignore\n        this._characteristics[uuid].readValue().then((data) => {\n            const buf = Buffer.alloc(data.buffer.byteLength);\n            const view = new Uint8Array(data.buffer);\n            for (let i = 0; i < buf.length; i++) {\n                buf[i] = view[i];\n            }\n            callback(null, buf);\n        });\n    }\n\n\n    public writeToCharacteristic (uuid: string, data: Buffer) {\n        return this._queue = this._queue.then(() => this._characteristics[uuid].writeValueWithoutResponse(data));\n    }\n\n\n    private _sanitizeUUID (uuid: string) {\n        return uuid.replace(/-/g, \"\");\n    }\n\n\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// startup\n// Load entry module\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(389);\n"],"sourceRoot":""}